# RIF-ProjectGen Configuration
# Intelligent Project Creation System Settings

version: 1.0.0

# Project generation settings
projectgen:
  # Maximum time for interactive discovery session
  max_interaction_time: 300s
  
  # Default repository visibility
  default_visibility: private
  
  # Automatically commit generated files
  auto_commit: true
  
  # Number of issues to create in batch
  issue_batch_size: 10
  
  # Cache templates for faster generation
  template_cache: true
  
  # Enable learning from each project
  learning_enabled: true
  
  # Default project location
  default_location: "$HOME/DEV"

# Discovery phase configuration
discovery:
  # Questions to ask during discovery
  prompts:
    - id: project_name
      question: "What would you like to name your project?"
      required: true
      validation: "^[a-z0-9-]+$"
      
    - id: project_type
      question: "What type of application are you building?"
      required: true
      options:
        - web-app
        - api-service
        - cli-tool
        - library
        - mobile-app
        - custom
        
    - id: description
      question: "Briefly describe your project:"
      required: true
      max_length: 500
      
    - id: target_users
      question: "Who are the target users?"
      required: true
      
    - id: core_features
      question: "What are the core features?"
      required: true
      format: comma_separated
      
    - id: tech_stack
      question: "Any specific technology preferences?"
      required: false
      
    - id: timeline
      question: "What's your target timeline?"
      required: false
      options:
        - "1-2 weeks"
        - "1 month"
        - "2-3 months"
        - "6+ months"
        - "No specific timeline"

# Template configurations
templates:
  web-app:
    name: "Web Application"
    description: "Full-stack web application with frontend and backend"
    structure:
      - frontend/
      - backend/
      - database/
      - docs/
      - tests/
    default_stack:
      frontend: ["React", "TypeScript", "Tailwind CSS"]
      backend: ["Node.js", "Express", "PostgreSQL"]
      
  api-service:
    name: "API Service"
    description: "RESTful or GraphQL API service"
    structure:
      - src/
      - tests/
      - docs/
      - config/
    default_stack:
      language: ["Node.js", "Python", "Go"]
      framework: ["Express", "FastAPI", "Gin"]
      
  cli-tool:
    name: "Command Line Tool"
    description: "CLI application or utility"
    structure:
      - src/
      - bin/
      - tests/
      - docs/
    default_stack:
      language: ["Python", "Go", "Rust"]
      
  library:
    name: "Library/Package"
    description: "Reusable library or package"
    structure:
      - src/
      - tests/
      - examples/
      - docs/
    default_stack:
      language: ["TypeScript", "Python", "Go"]

# Documentation generation settings
documentation:
  # PRD generation settings
  prd:
    include_epics: true
    include_stories: true
    include_nfrs: true
    include_timeline: true
    story_template: |
      As a {user_type}
      I want to {action}
      So that {benefit}
      
  # Architecture document settings
  architecture:
    include_diagrams: true
    include_components: true
    include_deployment: true
    include_security: true
    
  # UI/UX specification settings
  ui_spec:
    include_wireframes: false
    include_user_flows: true
    include_style_guide: true

# GitHub integration settings
github:
  # Repository settings
  repository:
    default_branch: main
    auto_init: true
    add_readme: true
    add_gitignore: true
    license: MIT
    
  # Issue generation settings
  issues:
    add_labels: true
    add_milestones: true
    add_assignees: false
    epic_label: "epic"
    story_label: "story"
    
  # Label definitions
  labels:
    - name: "state:new"
      color: "0E8A16"
      description: "New issue ready for analysis"
    - name: "state:analyzing"
      color: "FBCA04"
      description: "Being analyzed by RIF"
    - name: "state:planning"
      color: "1D76DB"
      description: "Being planned"
    - name: "state:implementing"
      color: "5319E7"
      description: "Being implemented"
    - name: "state:validating"
      color: "E99695"
      description: "Being validated"
    - name: "state:complete"
      color: "0E8A16"
      description: "Completed"
    - name: "epic"
      color: "7057FF"
      description: "Epic issue"
    - name: "story"
      color: "008672"
      description: "User story"

# Knowledge base integration
knowledge:
  # Pattern storage
  patterns:
    enabled: true
    location: "$RIF_HOME/knowledge/patterns/projects"
    format: json
    
  # Learning settings
  learning:
    track_success: true
    track_failures: true
    update_templates: true
    
  # Metrics collection
  metrics:
    generation_time: true
    user_satisfaction: true
    project_outcomes: true

# Agent coordination
agents:
  # Sub-agents to activate during generation
  discovery_agents:
    - business-analyst
    - rif-analyst
    
  documentation_agents:
    - project-manager
    - ux-ui
    - architect
    
  validation_agents:
    - quality-assurance
    - rif-validator

# Error handling
error_handling:
  # Retry settings
  max_retries: 3
  retry_delay: 5s
  
  # Recovery options
  recovery:
    save_checkpoint: true
    allow_manual_fix: true
    fallback_to_minimal: true
    
  # Notification settings
  notifications:
    on_failure: true
    on_success: true
    format: "console"

# Performance settings
performance:
  # Parallel processing
  parallel:
    enabled: true
    max_workers: 4
    
  # Caching
  cache:
    enabled: true
    ttl: 3600s
    location: "/tmp/rif-projectgen-cache"
    
  # Rate limiting
  rate_limit:
    github_api: 5000/hour
    backoff_factor: 2
    max_backoff: 60s

# Checkpoint settings
checkpoints:
  enabled: true
  location: "$RIF_HOME/temp/checkpoints"
  retention: 24h
  stages:
    - discovery_complete
    - documentation_complete
    - repository_created
    - github_synced
    - issues_created