# RIF Agent Capabilities Matrix
# Defines what capabilities each agent has and their performance characteristics

version: "1.0.0"
updated: "2025-08-24"

agents:
  rif-analyst:
    name: "RIF-Analyst"
    description: "Requirements analysis, pattern recognition, and complexity assessment"
    capabilities:
      - requirements
      - patterns  
      - complexity
      - issue_analysis
      - specification
    specializations:
      - requirement_extraction
      - pattern_matching
      - complexity_assessment
      - stakeholder_analysis
    performance_weight: 1.0
    evidence_required: true
    typical_tasks:
      - "Analyze GitHub issue requirements"
      - "Extract technical specifications"
      - "Assess project complexity"
      - "Identify similar patterns from history"
    success_metrics:
      - accuracy_of_requirement_identification
      - completeness_of_analysis
      - pattern_matching_relevance
      - complexity_assessment_accuracy

  rif-architect:
    name: "RIF-Architect"  
    description: "System design, architecture planning, and dependency management"
    capabilities:
      - design
      - dependencies
      - scaling
      - architecture
      - system_design
    specializations:
      - system_architecture
      - dependency_mapping
      - scalability_planning
      - integration_design
    performance_weight: 1.2
    evidence_required: true
    typical_tasks:
      - "Design system architecture"
      - "Plan component dependencies"
      - "Create scalability strategies"
      - "Define integration patterns"
    success_metrics:
      - architecture_completeness
      - dependency_accuracy
      - scalability_feasibility
      - design_maintainability

  rif-implementer:
    name: "RIF-Implementer"
    description: "Code implementation, refactoring, and optimization"
    capabilities:
      - coding
      - refactoring
      - optimization
      - implementation
      - debugging
    specializations:
      - code_development
      - performance_optimization
      - refactoring_strategies
      - bug_resolution
    performance_weight: 1.0
    evidence_required: true
    typical_tasks:
      - "Implement feature requirements"
      - "Refactor existing code"
      - "Optimize performance bottlenecks"
      - "Fix bugs and issues"
    success_metrics:
      - code_quality_score
      - implementation_completeness
      - performance_improvement
      - test_coverage

  rif-validator:
    name: "RIF-Validator"
    description: "Testing, quality assurance, and compliance validation"
    capabilities:
      - testing
      - quality
      - compliance
      - validation
      - verification
    specializations:
      - test_automation
      - quality_gates
      - compliance_checking
      - performance_testing
    performance_weight: 1.1
    evidence_required: true
    typical_tasks:
      - "Create comprehensive test suites"
      - "Validate quality standards"
      - "Ensure compliance requirements"
      - "Perform integration testing"
    success_metrics:
      - test_coverage_percentage
      - defect_detection_rate
      - compliance_validation_accuracy
      - quality_gate_effectiveness

  rif-security:
    name: "RIF-Security"
    description: "Security analysis, vulnerability assessment, and encryption"
    capabilities:
      - vulnerabilities
      - auth
      - encryption
      - security
      - compliance
    specializations:
      - vulnerability_assessment
      - authentication_design
      - encryption_implementation
      - security_auditing
    performance_weight: 1.3
    evidence_required: true
    typical_tasks:
      - "Conduct security assessments"
      - "Design authentication systems"
      - "Implement encryption strategies"
      - "Perform security audits"
    success_metrics:
      - vulnerability_detection_rate
      - security_compliance_score
      - authentication_robustness
      - encryption_effectiveness

  rif-performance:
    name: "RIF-Performance"
    description: "Performance optimization, profiling, and scaling"
    capabilities:
      - optimization
      - profiling
      - scaling
      - performance
      - monitoring
    specializations:
      - performance_profiling
      - optimization_strategies
      - scalability_analysis
      - monitoring_implementation
    performance_weight: 1.2
    evidence_required: true
    typical_tasks:
      - "Profile application performance"
      - "Optimize critical code paths"
      - "Design scaling strategies"
      - "Implement monitoring systems"
    success_metrics:
      - performance_improvement_percentage
      - scalability_factor
      - monitoring_coverage
      - optimization_effectiveness

  rif-planner:
    name: "RIF-Planner"
    description: "Project planning, workflow design, and resource allocation"
    capabilities:
      - planning
      - workflow
      - resource_allocation
      - scheduling
      - coordination
    specializations:
      - project_planning
      - workflow_optimization
      - resource_management
      - timeline_estimation
    performance_weight: 1.0
    evidence_required: true
    typical_tasks:
      - "Create project plans"
      - "Design optimal workflows"
      - "Allocate resources efficiently"
      - "Estimate timelines"
    success_metrics:
      - planning_accuracy
      - workflow_efficiency
      - resource_utilization
      - timeline_adherence

  rif-learner:
    name: "RIF-Learner"
    description: "Knowledge extraction, pattern learning, and system improvement"
    capabilities:
      - learning
      - knowledge_extraction
      - pattern_analysis
      - improvement
      - optimization
    specializations:
      - knowledge_base_updates
      - pattern_extraction
      - continuous_improvement
      - system_optimization
    performance_weight: 0.9
    evidence_required: false
    typical_tasks:
      - "Extract learnings from completed work"
      - "Update knowledge base patterns"
      - "Identify improvement opportunities"
      - "Optimize system processes"
    success_metrics:
      - knowledge_quality_improvement
      - pattern_accuracy
      - system_performance_gains
      - learning_effectiveness

# Capability mappings for requirement types
requirement_mappings:
  analysis:
    required_capabilities: [requirements, patterns, complexity]
    preferred_agents: [rif-analyst]
    complexity_factor: 1.2
    
  architecture:
    required_capabilities: [design, dependencies, scaling]
    preferred_agents: [rif-architect]
    complexity_factor: 2.0
    
  implementation:
    required_capabilities: [coding, refactoring, optimization]
    preferred_agents: [rif-implementer]
    complexity_factor: 1.5
    
  validation:
    required_capabilities: [testing, quality, compliance]
    preferred_agents: [rif-validator]
    complexity_factor: 1.3
    
  security:
    required_capabilities: [vulnerabilities, auth, encryption]
    preferred_agents: [rif-security]
    complexity_factor: 1.8
    
  performance:
    required_capabilities: [optimization, profiling, scaling]
    preferred_agents: [rif-performance]
    complexity_factor: 1.7
    
  planning:
    required_capabilities: [planning, workflow, resource_allocation]
    preferred_agents: [rif-planner]
    complexity_factor: 1.1
    
  learning:
    required_capabilities: [learning, knowledge_extraction, pattern_analysis]
    preferred_agents: [rif-learner]
    complexity_factor: 0.8

# Team composition rules
team_composition:
  max_team_size: 6
  min_team_size: 1
  
  # Mandatory agents for different complexity levels
  complexity_requirements:
    low:
      mandatory: [rif-implementer]
      optional: [rif-validator]
      
    medium:
      mandatory: [rif-analyst, rif-implementer, rif-validator]
      optional: [rif-planner]
      
    high:
      mandatory: [rif-analyst, rif-planner, rif-implementer, rif-validator]
      optional: [rif-architect]
      
    very-high:
      mandatory: [rif-analyst, rif-planner, rif-architect, rif-implementer, rif-validator]
      optional: [rif-security, rif-performance]

  # Specialist triggers
  specialist_triggers:
    security_critical:
      patterns: ['auth', 'security', 'encrypt', 'vulnerability', 'permission']
      required_agent: rif-security
      
    performance_critical:  
      patterns: ['performance', 'optimization', 'scaling', 'speed', 'memory']
      required_agent: rif-performance
      
    architecture_heavy:
      patterns: ['architecture', 'system', 'design', 'microservice', 'distributed']
      required_agent: rif-architect

# Performance baselines (for learning system)
performance_baselines:
  rif-analyst:
    success_rate: 0.85
    accuracy: 0.87
    efficiency: 0.83
    
  rif-architect:
    success_rate: 0.82
    accuracy: 0.85
    efficiency: 0.87
    
  rif-implementer:
    success_rate: 0.79
    accuracy: 0.81
    efficiency: 0.84
    
  rif-validator:
    success_rate: 0.88
    accuracy: 0.86
    efficiency: 0.89
    
  rif-security:
    success_rate: 0.91
    accuracy: 0.89
    efficiency: 0.92
    
  rif-performance:
    success_rate: 0.84
    accuracy: 0.87
    efficiency: 0.85
    
  rif-planner:
    success_rate: 0.83
    accuracy: 0.85
    efficiency: 0.82
    
  rif-learner:
    success_rate: 0.90
    accuracy: 0.88
    efficiency: 0.91