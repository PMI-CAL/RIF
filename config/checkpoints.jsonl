{"checkpoint_id": "validation_test", "timestamp": "2025-08-24T03:23:41.617625Z", "description": "", "configuration": {"rif-workflow.yaml": {"workflow": {"name": "RIF Automatic Workflow", "version": "2.0.0", "initial_state": "new", "states": {"new": {"description": "Issue created, awaiting analysis", "timeout": "30m"}, "analyzing": {"description": "RIF-Analyst analyzing requirements", "agent": "rif-analyst", "timeout": "1h"}, "planning": {"description": "RIF-Planner creating execution plan", "agent": "rif-planner", "timeout": "1h"}, "architecting": {"description": "RIF-Architect designing solution", "agent": "rif-architect", "timeout": "2h"}, "implementing": {"description": "RIF-Implementer writing code", "agent": "rif-implementer", "timeout": "4h", "checkpoints": true}, "validating": {"description": "RIF-Validator testing solution", "agent": "rif-validator", "timeout": "2h"}, "documenting": {"description": "RIF-Documenter generating documentation", "agent": "rif-documenter", "timeout": "1h"}, "learning": {"description": "RIF-Learner updating knowledge base", "agent": "rif-learner", "timeout": "30m"}, "reviewing": {"description": "RIF-Reviewer analyzing code quality", "agent": "rif-reviewer", "timeout": "1h"}, "skeptical_review": {"description": "RIF-Validator conducting adversarial verification", "agent": "rif-validator", "timeout": "2h", "parallel_to": ["implementing", "architecting"], "risk_based": true}, "evidence_gathering": {"description": "RIF-Validator collecting validation evidence", "agent": "rif-validator", "timeout": "1h", "required_for": ["complete"]}, "quality_tracking": {"description": "Shadow quality monitoring via parallel issue", "agent": "rif-validator", "shadow_issue": true, "continuous": true, "parallel_orchestration": true}, "pr_creating": {"description": "RIF-PR-Manager creating pull request", "agent": "rif-pr-manager", "timeout": "30m"}, "pr_validating": {"description": "RIF-PR-Manager validating PR quality gates", "agent": "rif-pr-manager", "timeout": "2h"}, "pr_merging": {"description": "RIF-PR-Manager executing merge strategy", "agent": "rif-pr-manager", "timeout": "30m"}, "deploying": {"description": "RIF-PR-Manager coordinating deployment", "agent": "rif-pr-manager", "timeout": "1h"}, "complete": {"description": "Work finished successfully", "final": true}, "blocked": {"description": "Work blocked, needs intervention", "alert": true}, "failed": {"description": "Work failed, needs recovery", "alert": true, "recovery": true}, "arbitrating": {"description": "Agent conflict resolution in progress", "agent": "rif-arbitrator", "timeout": "30m", "parallel": true, "conflict_resolution": true}, "escalating": {"description": "Human intervention required for unresolved disputes", "agent": "human", "timeout": "2h", "alert": true, "human_required": true}, "expert_review": {"description": "Expert panel reviewing conflicting positions", "agent": "rif-expert-panel", "timeout": "1h", "expertise_based": true}}, "transitions": [{"from": "new", "to": "analyzing", "trigger": "auto", "condition": "always"}, {"from": "analyzing", "to": "planning", "trigger": "analysis_complete", "condition": "patterns_found OR complexity_assessed"}, {"from": "planning", "to": "architecting", "trigger": "plan_complete", "condition": "complexity >= high"}, {"from": "planning", "to": "implementing", "trigger": "plan_complete", "condition": "complexity < high"}, {"from": "architecting", "to": "implementing", "trigger": "design_complete", "condition": "dependencies_mapped"}, {"from": "implementing", "to": "validating", "trigger": "code_complete", "condition": "tests_written"}, {"from": "validating", "to": "documenting", "trigger": "tests_pass", "condition": "quality_gates_pass"}, {"from": "validating", "to": "implementing", "trigger": "tests_fail", "condition": "fixable_errors"}, {"from": "validating", "to": "failed", "trigger": "tests_fail", "condition": "critical_errors"}, {"from": "documenting", "to": "pr_creating", "trigger": "docs_complete", "condition": "pr_needed"}, {"from": "documenting", "to": "learning", "trigger": "docs_complete", "condition": "no_pr_needed"}, {"from": "pr_creating", "to": "pr_validating", "trigger": "pr_created", "condition": "quality_gates_triggered"}, {"from": "pr_validating", "to": "pr_merging", "trigger": "validation_complete", "condition": "all_gates_pass"}, {"from": "pr_validating", "to": "implementing", "trigger": "validation_failed", "condition": "fixable_issues"}, {"from": "pr_merging", "to": "deploying", "trigger": "merge_complete", "condition": "deployment_required"}, {"from": "pr_merging", "to": "learning", "trigger": "merge_complete", "condition": "no_deployment_needed"}, {"from": "deploying", "to": "learning", "trigger": "deployment_complete", "condition": "always"}, {"from": "reviewing", "to": "learning", "trigger": "review_approved", "condition": "changes_approved"}, {"from": "reviewing", "to": "implementing", "trigger": "changes_requested", "condition": "minor_changes"}, {"from": "reviewing", "to": "architecting", "trigger": "changes_requested", "condition": "major_changes"}, {"from": "learning", "to": "complete", "trigger": "knowledge_updated", "condition": "always"}, {"from": "implementing", "to": "skeptical_review", "trigger": "code_ready", "condition": "risk_level >= medium", "parallel": true}, {"from": "skeptical_review", "to": "evidence_gathering", "trigger": "missing_evidence", "condition": "evidence_incomplete"}, {"from": "evidence_gathering", "to": "validating", "trigger": "evidence_complete", "condition": "all_evidence_provided"}, {"from": "validating", "to": "implementing", "trigger": "validation_failed", "condition": "evidence_insufficient OR quality_score < 60"}, {"from": "quality_tracking", "to": "complete", "trigger": "main_issue_complete", "condition": "shadow_issue_closed"}, {"from": "blocked", "to": "analyzing", "trigger": "unblocked", "condition": "manual_intervention"}, {"from": "failed", "to": "analyzing", "trigger": "retry", "condition": "checkpoint_available"}, {"from": "validating", "to": "arbitrating", "trigger": "agent_conflict_detected", "condition": "disagreement_threshold_exceeded"}, {"from": "implementing", "to": "arbitrating", "trigger": "design_conflict", "condition": "conflicting_agent_decisions"}, {"from": "arbitrating", "to": "expert_review", "trigger": "escalation_required", "condition": "automated_resolution_failed"}, {"from": "expert_review", "to": "validating", "trigger": "expert_consensus_reached", "condition": "conflict_resolved"}, {"from": "expert_review", "to": "escalating", "trigger": "expert_disagreement", "condition": "expert_panel_deadlocked"}, {"from": "arbitrating", "to": "escalating", "trigger": "arbitration_timeout", "condition": "timeout_exceeded OR critical_security_conflict"}, {"from": "escalating", "to": "validating", "trigger": "human_decision_made", "condition": "conflict_resolved_by_human"}, {"from": "escalating", "to": "blocked", "trigger": "escalation_timeout", "condition": "human_intervention_timeout"}], "parallel": {"enabled": true, "max_concurrent": 4, "allowed_states": ["implementing", "validating", "documenting", "pr_validating", "deploying", "skeptical_review", "evidence_gathering", "quality_tracking", "arbitrating", "expert_review"], "constraints": ["Cannot parallelize across different issues", "Must maintain dependency order", "Quality gates must be sequential"]}, "checkpoints": {"enabled": true, "automatic_triggers": ["state_transition", "test_failure", "error_detected", "timeout_approaching"], "retention": {"successful": "7d", "failed": "30d"}, "recovery": {"automatic": true, "max_attempts": 3, "backoff": "exponential"}}, "quality_gates": {"adaptive_coverage": {"engine": "context_aware", "enabled": true, "fallback_threshold": 80, "component_overrides": true, "performance_budget": 300, "config_file": "config/component-types.yaml", "required": true, "blocker": true, "description": "Context-aware coverage thresholds based on component types", "weighted_calculation": {"enabled": true, "default_strategy": "balanced", "minimum_threshold": 60, "maximum_threshold": 100}, "performance_monitoring": {"track_classification_time": true, "track_calculation_time": true, "alert_on_slow_performance": true, "target_classification_time_ms": 100, "target_calculation_time_ms": 200}, "accuracy_validation": {"minimum_accuracy": 95.0, "enable_accuracy_tracking": true, "accuracy_degradation_alert": 2.0}}, "code_coverage": {"threshold": 80, "adaptive_override": "adaptive_coverage", "required": true, "blocker": true}, "security_scan": {"threshold": "no_critical", "required": true, "blocker": true}, "linting": {"threshold": "no_errors", "required": true, "blocker": false}, "performance": {"threshold": "baseline", "required": false, "blocker": false}, "documentation": {"threshold": "complete", "required": true, "blocker": false}, "evidence_requirements": {"threshold": "100%", "required": true, "blocker": true, "validation": "All claims must have verifiable evidence"}, "quality_score": {"threshold": 80, "formula": "100 - (20 \u00d7 FAILs) - (10 \u00d7 CONCERNS)", "required": true, "blocker": true, "deterministic": true}, "risk_assessment": {"threshold": "acceptable", "escalation_triggers": ["security_changes", "auth_modifications", "payment_processing", "large_diff", "no_tests"], "blocker": false, "advisory": true}, "conflict_resolution": {"threshold": "resolved", "required": true, "blocker": true, "description": "Agent conflicts must be resolved before proceeding"}, "arbitration_confidence": {"threshold": 0.7, "required": true, "blocker": true, "description": "Arbitration decisions must meet minimum confidence threshold"}, "escalation_justification": {"threshold": "documented", "required": true, "blocker": false, "description": "Human escalations must be properly justified"}}, "complexity": {"factors": [{"name": "lines_of_code", "weight": 0.3, "thresholds": {"low": 50, "medium": 500, "high": 2000, "very_high": 5000}}, {"name": "files_affected", "weight": 0.2, "thresholds": {"low": 1, "medium": 5, "high": 20, "very_high": 50}}, {"name": "dependencies", "weight": 0.3, "thresholds": {"low": 0, "medium": 3, "high": 10, "very_high": 20}}, {"name": "cross_cutting", "weight": 0.2, "thresholds": {"low": false, "medium": false, "high": true, "very_high": true}}]}, "planning_depth": {"shallow": {"complexity": "low", "max_depth": 1, "agents": ["rif-analyst", "rif-implementer", "rif-validator"]}, "standard": {"complexity": "medium", "max_depth": 3, "agents": ["rif-analyst", "rif-planner", "rif-implementer", "rif-validator"]}, "deep": {"complexity": "high", "max_depth": 5, "agents": ["rif-analyst", "rif-planner", "rif-architect", "rif-implementer", "rif-validator", "rif-documenter"]}, "recursive": {"complexity": "very_high", "max_depth": 10, "agents": "all", "decompose": true, "sub_issues": true}}, "monitoring": {"metrics": ["state_duration", "transition_count", "checkpoint_usage", "quality_scores", "agent_performance"], "alerts": {"stuck_workflow": {"condition": "state_duration > timeout", "action": "escalate"}, "quality_failure": {"condition": "quality_gate_failed", "action": "rollback"}, "repeated_failure": {"condition": "failure_count > 3", "action": "manual_review"}}}, "evidence_requirements": {"feature_complete": {"mandatory": ["unit_tests_passing", "integration_tests_passing", "coverage_report", "functional_testing_results"], "optional": ["performance_metrics", "user_acceptance_testing", "accessibility_audit"]}, "bug_fixed": {"mandatory": ["regression_test_added", "root_cause_analysis", "fix_verification_test", "before_after_comparison"], "optional": ["prevention_measures_documented", "related_bug_tests_added", "monitoring_alerting_updated"]}, "performance_improved": {"mandatory": ["baseline_performance_metrics", "after_performance_metrics", "statistical_comparison_analysis", "load_testing_results"], "optional": ["profiling_data", "resource_utilization_analysis", "scalability_testing"]}, "security_validated": {"mandatory": ["automated_vulnerability_scan", "security_test_results", "threat_model_review", "penetration_testing_summary"], "optional": ["compliance_checklist", "security_audit_trail", "third_party_security_review"]}, "refactoring_complete": {"mandatory": ["before_after_code_metrics", "test_suite_still_passing", "performance_unchanged_proof", "api_compatibility_verified"], "optional": ["code_quality_improvements", "technical_debt_reduction", "maintainability_metrics"]}}, "shadow_quality_tracking": {"enabled": true, "auto_create": true, "prefix": "Quality Tracking:", "labels": ["quality:shadow", "state:quality-tracking"], "triggers": {"complexity": ["medium", "high", "very-high"], "risk_level": ["medium", "high", "critical"], "security_changes": true, "large_changes": ">500 lines"}}, "verification_parallelism": {"enabled": true, "strategies": {"main_development": {"states": ["implementing", "architecting", "planning"], "description": "Primary development workflow"}, "quality_assurance": {"states": ["skeptical_review", "quality_tracking", "evidence_gathering"], "description": "Parallel quality verification"}, "can_run_simultaneously": true, "max_parallel_streams": 2}}, "adversarial_testing": {"enabled": true, "default_mindset": "skeptical", "evidence_based_decisions": true, "risk_escalation": {"enabled": true, "auto_triggers": true, "escalation_factors": ["security_file_changes", "authentication_modifications", "payment_processing_changes", "large_diffs", "missing_tests", "previous_failures"]}}, "github": {"auto_labels": {"enabled": true, "prefix": "rif-"}, "auto_comments": {"enabled": true, "format": "markdown", "include_metrics": true}, "auto_pr": {"enabled": true, "draft": false, "reviewers": "auto"}, "auto_close": {"enabled": true, "on_complete": true, "add_comment": true}}, "arbitration": {"enabled": true, "conflict_detection": {"disagreement_threshold": 0.3, "confidence_threshold": 0.5, "split_decision_threshold": 0.4, "outlier_detection_stddev": 2.0, "low_confidence_threshold": 0.4, "expertise_coverage_threshold": 0.7}, "escalation": {"max_levels": 3, "timeout_minutes": {"automated_resolution": 5, "weighted_consensus": 10, "expert_panel": 30, "arbitrator_agent": 45, "evidence_review": 30, "human_intervention": 1440}, "strategies": {"conservative": {"enabled": true, "use_case": "security_critical OR risk_level >= high"}, "balanced": {"enabled": true, "use_case": "default"}, "aggressive": {"enabled": true, "use_case": "risk_level <= low AND complexity <= medium"}, "security_focused": {"enabled": true, "use_case": "security_critical = true"}, "efficiency_focused": {"enabled": true, "use_case": "time_critical = true"}}}, "arbitrator_agents": {"default": {"mode": "balanced", "skills": ["evidence_analysis", "reasoning_evaluation", "bias_detection", "conflict_mediation"], "confidence_threshold": 0.75, "max_analysis_time_minutes": 30}, "security_specialist": {"mode": "analytical", "skills": ["evidence_analysis", "reasoning_evaluation", "technical_expertise", "risk_assessment"], "expertise_domains": ["security", "compliance"], "confidence_threshold": 0.85, "max_analysis_time_minutes": 45}, "consensus_builder": {"mode": "consensus_building", "skills": ["conflict_mediation", "pattern_recognition", "bias_detection", "reasoning_evaluation"], "confidence_threshold": 0.7, "max_analysis_time_minutes": 60}}, "decision_recording": {"enabled": true, "retention_days": 365, "verification_enabled": true, "compliance_threshold": 0.8, "audit_events": ["decision_initiated", "conflict_detected", "escalation_triggered", "resolution_achieved", "human_escalated", "decision_overridden"]}, "human_escalation": {"enabled": true, "notification_channels": ["github_issue_comment", "slack_alert", "email_notification"], "timeout_hours": 24, "auto_reminder_hours": 4, "escalation_triggers": ["arbitration_timeout", "critical_security_conflict", "expert_panel_deadlock", "compliance_violation"]}, "workflow_integration": {"trigger_states": ["validating", "implementing", "pr_validating"], "conflict_detection_points": ["agent_vote_collection", "quality_gate_evaluation", "pr_review_conflicts"], "parallel_execution": true, "checkpoint_integration": true}, "metrics": {"track_resolution_time": true, "track_escalation_patterns": true, "track_confidence_accuracy": true, "track_human_intervention_rate": true, "performance_targets": {"average_resolution_time_minutes": 15, "escalation_rate_threshold": 0.2, "human_intervention_rate_threshold": 0.1, "confidence_accuracy_threshold": 0.85}}}}}, "adaptive-thresholds.yaml": {"optimization": {"enabled": true, "frequency_days": 14, "min_confidence_threshold": 0.7, "max_threshold_change_percent": 20.0, "min_historical_data_days": 30, "required_sample_size": 10, "prefer_conservative_changes": true, "enable_statistical_optimization": true, "use_pattern_based_recommendations": true}, "safety": {"require_manual_approval": true, "max_simultaneous_changes": 3, "rollback_monitoring_hours": 24, "performance_degradation_threshold": 0.1, "auto_rollback_on_failure_rate": 0.5, "auto_rollback_on_performance_drop": 0.15, "monitoring_alert_threshold": 0.2}, "component_priorities": {"critical_algorithms": "high", "public_apis": "high", "business_logic": "medium", "integration_code": "medium", "ui_components": "low", "test_utilities": "low"}, "learning": {"pattern_analysis_enabled": true, "github_issue_mining": true, "continuous_learning": true, "success_tracking_days": 90, "use_rif_knowledge_patterns": true, "store_successful_optimizations": true, "learn_from_rollbacks": true}, "notifications": {"threshold_changes": true, "optimization_results": true, "rollback_required": true, "performance_alerts": true, "github_comments": true, "log_level": "info"}, "thresholds": {"absolute_minimum": 50.0, "absolute_maximum": 100.0, "component_minimums": {"critical_algorithms": 85.0, "public_apis": 80.0, "business_logic": 75.0, "integration_code": 70.0, "ui_components": 60.0, "test_utilities": 50.0}}, "rules": {"low_pass_rate_threshold": 0.6, "high_override_rate_threshold": 0.25, "excellent_performance_threshold": 0.9, "trend_analysis_periods": 4, "improving_trend_confidence": 0.7, "degrading_trend_sensitivity": 0.15, "variance_threshold_for_optimization": 15.0, "confidence_boost_for_large_samples": true, "penalize_small_samples": true}, "integration": {"quality_gates_file": "config/rif-workflow.yaml", "backup_directory": "config/backups", "checkpoint_retention_days": 90, "change_history_retention_days": 365}}, "component-types.yaml": {"component_types": {"critical_algorithms": {"description": "Mission-critical algorithms and core computational logic", "priority": 1, "min_threshold": 95, "target_threshold": 100, "risk_factor": 1.5, "patterns": ["**/algorithms/**", "**/core/**", "**/engine/**", "**/*algorithm*", "**/*_algo.py", "**/crypto/**", "**/security/core/**"], "content_patterns": ["def.*algorithm", "class.*Algorithm", "@critical", "@algorithm", "def.*compute", "def.*calculate", "def.*process.*data"], "critical_extensions": [".py", ".js", ".ts", ".go", ".rs"]}, "public_apis": {"description": "Public-facing APIs and external interfaces", "priority": 2, "min_threshold": 90, "target_threshold": 95, "risk_factor": 1.3, "patterns": ["**/api/**", "**/endpoints/**", "**/routes/**", "**/*_api.py", "**/controllers/**", "**/handlers/**", "**/views/**"], "content_patterns": ["@app\\.route", "@api_view", "class.*API", "class.*Handler", "class.*Controller", "def get\\(", "def post\\(", "def put\\(", "def delete\\(", "def patch\\(", "@router"], "critical_extensions": [".py", ".js", ".ts", ".go", ".java"]}, "business_logic": {"description": "Core business logic and service layer components", "priority": 3, "min_threshold": 85, "target_threshold": 90, "risk_factor": 1.2, "patterns": ["**/services/**", "**/logic/**", "**/models/**", "**/domain/**", "**/business/**", "**/*_service.py", "**/*_logic.py", "**/*order*", "**/*management*"], "content_patterns": ["class.*Service", "class.*Manager", "class.*Handler", "@service", "@business_logic", "def.*business", "def.*process", "class.*Model", "order", "management"], "critical_extensions": [".py", ".js", ".ts", ".java", ".cs"]}, "integration_code": {"description": "External integrations and third-party service connectors", "priority": 4, "min_threshold": 80, "target_threshold": 85, "risk_factor": 1.1, "patterns": ["**/integrations/**", "**/external/**", "**/connectors/**", "**/adapters/**", "**/*client.py", "**/*_integration.py", "**/webhooks/**"], "content_patterns": ["requests\\.", "httpx\\.", "urllib\\.", "class.*Client", "class.*Connector", "class.*Integration", "class.*Adapter", "@integration"], "critical_extensions": [".py", ".js", ".ts", ".java", ".go"]}, "ui_components": {"description": "User interface components and frontend logic", "priority": 5, "min_threshold": 70, "target_threshold": 80, "risk_factor": 1.0, "patterns": ["**/components/**", "**/views/**", "**/pages/**", "**/templates/**", "**/static/**", "**/*.jsx", "**/*.vue", "**/*.svelte", "**/*.tsx", "**/*template*", "**/*view*", "**/*component*"], "content_patterns": ["return.*<", "render\\(", "component", "@Component", "React\\.", "Vue\\.", "useState", "useEffect"], "critical_extensions": [".jsx", ".tsx", ".vue", ".svelte", ".html", ".js", ".ts"]}, "test_utilities": {"description": "Test helpers, fixtures, and utility functions", "priority": 6, "min_threshold": 60, "target_threshold": 70, "risk_factor": 0.8, "patterns": ["**/test_utils/**", "**/fixtures/**", "**/helpers/**", "**/mocks/**", "**/*_helper.py", "**/conftest.py", "**/test_*.py", "**/*_test.py", "**/tests/**", "**/__tests__/**", "tests/*", "test/*", "tests/**", "**/test*.py"], "content_patterns": ["@fixture", "def test_", "mock", "Mock", "patch", "assert", "@pytest", "@test", "setUp", "tearDown", "TestCase", "unittest"], "critical_extensions": [".py", ".js", ".ts", ".java", ".go"]}}, "configuration": {"classification": {"pattern_matching_weight": 0.6, "content_analysis_weight": 0.3, "heuristic_fallback_weight": 0.1, "max_classification_time_ms": 100, "batch_optimization": true, "high_confidence_threshold": 0.9, "medium_confidence_threshold": 0.7, "low_confidence_threshold": 0.5}, "thresholds": {"fallback_threshold": 80, "small_change_bonus": 5, "large_change_penalty": 10, "hotfix_modifier": 1.2, "experimental_modifier": 0.9, "weighted_average": true, "min_component_weight": 0.1}, "performance": {"track_classification_time": true, "track_accuracy_metrics": true, "benchmark_against_baseline": true, "target_classification_accuracy": 95.0, "target_performance_overhead": 300}, "integration": {"rif_workflow_integration": true, "claude_hooks_integration": true, "github_actions_integration": true, "graceful_degradation": true, "log_classification_decisions": true}}, "validation": {"minimum_accuracy_threshold": 95.0, "accuracy_measurement_method": "historical_validation", "test_dataset_size": 1000, "cross_validation_folds": 5, "manual_review_threshold": 0.6, "conflict_resolution_strategy": "highest_priority_wins", "benchmark_dataset_size": 10000, "max_acceptable_latency_ms": 300}, "learning": {"enable_pattern_learning": true, "pattern_update_frequency": "weekly", "analyze_classification_errors": true, "maintain_accuracy_metrics": true, "accuracy_degradation_threshold": 2.0, "performance_degradation_threshold": 50}}}, "file_path": "config", "backup_path": "config/backups/validation_test"}
{"checkpoint_id": "test", "timestamp": "2025-08-24T03:24:08.421064Z", "description": "", "configuration": {"rif-workflow.yaml": {"workflow": {"name": "RIF Automatic Workflow", "version": "2.0.0", "initial_state": "new", "states": {"new": {"description": "Issue created, awaiting analysis", "timeout": "30m"}, "analyzing": {"description": "RIF-Analyst analyzing requirements", "agent": "rif-analyst", "timeout": "1h"}, "planning": {"description": "RIF-Planner creating execution plan", "agent": "rif-planner", "timeout": "1h"}, "architecting": {"description": "RIF-Architect designing solution", "agent": "rif-architect", "timeout": "2h"}, "implementing": {"description": "RIF-Implementer writing code", "agent": "rif-implementer", "timeout": "4h", "checkpoints": true}, "validating": {"description": "RIF-Validator testing solution", "agent": "rif-validator", "timeout": "2h"}, "documenting": {"description": "RIF-Documenter generating documentation", "agent": "rif-documenter", "timeout": "1h"}, "learning": {"description": "RIF-Learner updating knowledge base", "agent": "rif-learner", "timeout": "30m"}, "reviewing": {"description": "RIF-Reviewer analyzing code quality", "agent": "rif-reviewer", "timeout": "1h"}, "skeptical_review": {"description": "RIF-Validator conducting adversarial verification", "agent": "rif-validator", "timeout": "2h", "parallel_to": ["implementing", "architecting"], "risk_based": true}, "evidence_gathering": {"description": "RIF-Validator collecting validation evidence", "agent": "rif-validator", "timeout": "1h", "required_for": ["complete"]}, "quality_tracking": {"description": "Shadow quality monitoring via parallel issue", "agent": "rif-validator", "shadow_issue": true, "continuous": true, "parallel_orchestration": true}, "pr_creating": {"description": "RIF-PR-Manager creating pull request", "agent": "rif-pr-manager", "timeout": "30m"}, "pr_validating": {"description": "RIF-PR-Manager validating PR quality gates", "agent": "rif-pr-manager", "timeout": "2h"}, "pr_merging": {"description": "RIF-PR-Manager executing merge strategy", "agent": "rif-pr-manager", "timeout": "30m"}, "deploying": {"description": "RIF-PR-Manager coordinating deployment", "agent": "rif-pr-manager", "timeout": "1h"}, "complete": {"description": "Work finished successfully", "final": true}, "blocked": {"description": "Work blocked, needs intervention", "alert": true}, "failed": {"description": "Work failed, needs recovery", "alert": true, "recovery": true}, "arbitrating": {"description": "Agent conflict resolution in progress", "agent": "rif-arbitrator", "timeout": "30m", "parallel": true, "conflict_resolution": true}, "escalating": {"description": "Human intervention required for unresolved disputes", "agent": "human", "timeout": "2h", "alert": true, "human_required": true}, "expert_review": {"description": "Expert panel reviewing conflicting positions", "agent": "rif-expert-panel", "timeout": "1h", "expertise_based": true}}, "transitions": [{"from": "new", "to": "analyzing", "trigger": "auto", "condition": "always"}, {"from": "analyzing", "to": "planning", "trigger": "analysis_complete", "condition": "patterns_found OR complexity_assessed"}, {"from": "planning", "to": "architecting", "trigger": "plan_complete", "condition": "complexity >= high"}, {"from": "planning", "to": "implementing", "trigger": "plan_complete", "condition": "complexity < high"}, {"from": "architecting", "to": "implementing", "trigger": "design_complete", "condition": "dependencies_mapped"}, {"from": "implementing", "to": "validating", "trigger": "code_complete", "condition": "tests_written"}, {"from": "validating", "to": "documenting", "trigger": "tests_pass", "condition": "quality_gates_pass"}, {"from": "validating", "to": "implementing", "trigger": "tests_fail", "condition": "fixable_errors"}, {"from": "validating", "to": "failed", "trigger": "tests_fail", "condition": "critical_errors"}, {"from": "documenting", "to": "pr_creating", "trigger": "docs_complete", "condition": "pr_needed"}, {"from": "documenting", "to": "learning", "trigger": "docs_complete", "condition": "no_pr_needed"}, {"from": "pr_creating", "to": "pr_validating", "trigger": "pr_created", "condition": "quality_gates_triggered"}, {"from": "pr_validating", "to": "pr_merging", "trigger": "validation_complete", "condition": "all_gates_pass"}, {"from": "pr_validating", "to": "implementing", "trigger": "validation_failed", "condition": "fixable_issues"}, {"from": "pr_merging", "to": "deploying", "trigger": "merge_complete", "condition": "deployment_required"}, {"from": "pr_merging", "to": "learning", "trigger": "merge_complete", "condition": "no_deployment_needed"}, {"from": "deploying", "to": "learning", "trigger": "deployment_complete", "condition": "always"}, {"from": "reviewing", "to": "learning", "trigger": "review_approved", "condition": "changes_approved"}, {"from": "reviewing", "to": "implementing", "trigger": "changes_requested", "condition": "minor_changes"}, {"from": "reviewing", "to": "architecting", "trigger": "changes_requested", "condition": "major_changes"}, {"from": "learning", "to": "complete", "trigger": "knowledge_updated", "condition": "always"}, {"from": "implementing", "to": "skeptical_review", "trigger": "code_ready", "condition": "risk_level >= medium", "parallel": true}, {"from": "skeptical_review", "to": "evidence_gathering", "trigger": "missing_evidence", "condition": "evidence_incomplete"}, {"from": "evidence_gathering", "to": "validating", "trigger": "evidence_complete", "condition": "all_evidence_provided"}, {"from": "validating", "to": "implementing", "trigger": "validation_failed", "condition": "evidence_insufficient OR quality_score < 60"}, {"from": "quality_tracking", "to": "complete", "trigger": "main_issue_complete", "condition": "shadow_issue_closed"}, {"from": "blocked", "to": "analyzing", "trigger": "unblocked", "condition": "manual_intervention"}, {"from": "failed", "to": "analyzing", "trigger": "retry", "condition": "checkpoint_available"}, {"from": "validating", "to": "arbitrating", "trigger": "agent_conflict_detected", "condition": "disagreement_threshold_exceeded"}, {"from": "implementing", "to": "arbitrating", "trigger": "design_conflict", "condition": "conflicting_agent_decisions"}, {"from": "arbitrating", "to": "expert_review", "trigger": "escalation_required", "condition": "automated_resolution_failed"}, {"from": "expert_review", "to": "validating", "trigger": "expert_consensus_reached", "condition": "conflict_resolved"}, {"from": "expert_review", "to": "escalating", "trigger": "expert_disagreement", "condition": "expert_panel_deadlocked"}, {"from": "arbitrating", "to": "escalating", "trigger": "arbitration_timeout", "condition": "timeout_exceeded OR critical_security_conflict"}, {"from": "escalating", "to": "validating", "trigger": "human_decision_made", "condition": "conflict_resolved_by_human"}, {"from": "escalating", "to": "blocked", "trigger": "escalation_timeout", "condition": "human_intervention_timeout"}], "parallel": {"enabled": true, "max_concurrent": 4, "allowed_states": ["implementing", "validating", "documenting", "pr_validating", "deploying", "skeptical_review", "evidence_gathering", "quality_tracking", "arbitrating", "expert_review"], "constraints": ["Cannot parallelize across different issues", "Must maintain dependency order", "Quality gates must be sequential"]}, "checkpoints": {"enabled": true, "automatic_triggers": ["state_transition", "test_failure", "error_detected", "timeout_approaching"], "retention": {"successful": "7d", "failed": "30d"}, "recovery": {"automatic": true, "max_attempts": 3, "backoff": "exponential"}}, "quality_gates": {"adaptive_coverage": {"engine": "context_aware", "enabled": true, "fallback_threshold": 80, "component_overrides": true, "performance_budget": 300, "config_file": "config/component-types.yaml", "required": true, "blocker": true, "description": "Context-aware coverage thresholds based on component types", "weighted_calculation": {"enabled": true, "default_strategy": "balanced", "minimum_threshold": 60, "maximum_threshold": 100}, "performance_monitoring": {"track_classification_time": true, "track_calculation_time": true, "alert_on_slow_performance": true, "target_classification_time_ms": 100, "target_calculation_time_ms": 200}, "accuracy_validation": {"minimum_accuracy": 95.0, "enable_accuracy_tracking": true, "accuracy_degradation_alert": 2.0}}, "code_coverage": {"threshold": 80, "adaptive_override": "adaptive_coverage", "required": true, "blocker": true}, "security_scan": {"threshold": "no_critical", "required": true, "blocker": true}, "linting": {"threshold": "no_errors", "required": true, "blocker": false}, "performance": {"threshold": "baseline", "required": false, "blocker": false}, "documentation": {"threshold": "complete", "required": true, "blocker": false}, "evidence_requirements": {"threshold": "100%", "required": true, "blocker": true, "validation": "All claims must have verifiable evidence"}, "quality_score": {"threshold": 80, "formula": "100 - (20 \u00d7 FAILs) - (10 \u00d7 CONCERNS)", "required": true, "blocker": true, "deterministic": true}, "risk_assessment": {"threshold": "acceptable", "escalation_triggers": ["security_changes", "auth_modifications", "payment_processing", "large_diff", "no_tests"], "blocker": false, "advisory": true}, "conflict_resolution": {"threshold": "resolved", "required": true, "blocker": true, "description": "Agent conflicts must be resolved before proceeding"}, "arbitration_confidence": {"threshold": 0.7, "required": true, "blocker": true, "description": "Arbitration decisions must meet minimum confidence threshold"}, "escalation_justification": {"threshold": "documented", "required": true, "blocker": false, "description": "Human escalations must be properly justified"}}, "complexity": {"factors": [{"name": "lines_of_code", "weight": 0.3, "thresholds": {"low": 50, "medium": 500, "high": 2000, "very_high": 5000}}, {"name": "files_affected", "weight": 0.2, "thresholds": {"low": 1, "medium": 5, "high": 20, "very_high": 50}}, {"name": "dependencies", "weight": 0.3, "thresholds": {"low": 0, "medium": 3, "high": 10, "very_high": 20}}, {"name": "cross_cutting", "weight": 0.2, "thresholds": {"low": false, "medium": false, "high": true, "very_high": true}}]}, "planning_depth": {"shallow": {"complexity": "low", "max_depth": 1, "agents": ["rif-analyst", "rif-implementer", "rif-validator"]}, "standard": {"complexity": "medium", "max_depth": 3, "agents": ["rif-analyst", "rif-planner", "rif-implementer", "rif-validator"]}, "deep": {"complexity": "high", "max_depth": 5, "agents": ["rif-analyst", "rif-planner", "rif-architect", "rif-implementer", "rif-validator", "rif-documenter"]}, "recursive": {"complexity": "very_high", "max_depth": 10, "agents": "all", "decompose": true, "sub_issues": true}}, "monitoring": {"metrics": ["state_duration", "transition_count", "checkpoint_usage", "quality_scores", "agent_performance"], "alerts": {"stuck_workflow": {"condition": "state_duration > timeout", "action": "escalate"}, "quality_failure": {"condition": "quality_gate_failed", "action": "rollback"}, "repeated_failure": {"condition": "failure_count > 3", "action": "manual_review"}}}, "evidence_requirements": {"feature_complete": {"mandatory": ["unit_tests_passing", "integration_tests_passing", "coverage_report", "functional_testing_results"], "optional": ["performance_metrics", "user_acceptance_testing", "accessibility_audit"]}, "bug_fixed": {"mandatory": ["regression_test_added", "root_cause_analysis", "fix_verification_test", "before_after_comparison"], "optional": ["prevention_measures_documented", "related_bug_tests_added", "monitoring_alerting_updated"]}, "performance_improved": {"mandatory": ["baseline_performance_metrics", "after_performance_metrics", "statistical_comparison_analysis", "load_testing_results"], "optional": ["profiling_data", "resource_utilization_analysis", "scalability_testing"]}, "security_validated": {"mandatory": ["automated_vulnerability_scan", "security_test_results", "threat_model_review", "penetration_testing_summary"], "optional": ["compliance_checklist", "security_audit_trail", "third_party_security_review"]}, "refactoring_complete": {"mandatory": ["before_after_code_metrics", "test_suite_still_passing", "performance_unchanged_proof", "api_compatibility_verified"], "optional": ["code_quality_improvements", "technical_debt_reduction", "maintainability_metrics"]}}, "shadow_quality_tracking": {"enabled": true, "auto_create": true, "prefix": "Quality Tracking:", "labels": ["quality:shadow", "state:quality-tracking"], "triggers": {"complexity": ["medium", "high", "very-high"], "risk_level": ["medium", "high", "critical"], "security_changes": true, "large_changes": ">500 lines"}}, "verification_parallelism": {"enabled": true, "strategies": {"main_development": {"states": ["implementing", "architecting", "planning"], "description": "Primary development workflow"}, "quality_assurance": {"states": ["skeptical_review", "quality_tracking", "evidence_gathering"], "description": "Parallel quality verification"}, "can_run_simultaneously": true, "max_parallel_streams": 2}}, "adversarial_testing": {"enabled": true, "default_mindset": "skeptical", "evidence_based_decisions": true, "risk_escalation": {"enabled": true, "auto_triggers": true, "escalation_factors": ["security_file_changes", "authentication_modifications", "payment_processing_changes", "large_diffs", "missing_tests", "previous_failures"]}}, "github": {"auto_labels": {"enabled": true, "prefix": "rif-"}, "auto_comments": {"enabled": true, "format": "markdown", "include_metrics": true}, "auto_pr": {"enabled": true, "draft": false, "reviewers": "auto"}, "auto_close": {"enabled": true, "on_complete": true, "add_comment": true}}, "arbitration": {"enabled": true, "conflict_detection": {"disagreement_threshold": 0.3, "confidence_threshold": 0.5, "split_decision_threshold": 0.4, "outlier_detection_stddev": 2.0, "low_confidence_threshold": 0.4, "expertise_coverage_threshold": 0.7}, "escalation": {"max_levels": 3, "timeout_minutes": {"automated_resolution": 5, "weighted_consensus": 10, "expert_panel": 30, "arbitrator_agent": 45, "evidence_review": 30, "human_intervention": 1440}, "strategies": {"conservative": {"enabled": true, "use_case": "security_critical OR risk_level >= high"}, "balanced": {"enabled": true, "use_case": "default"}, "aggressive": {"enabled": true, "use_case": "risk_level <= low AND complexity <= medium"}, "security_focused": {"enabled": true, "use_case": "security_critical = true"}, "efficiency_focused": {"enabled": true, "use_case": "time_critical = true"}}}, "arbitrator_agents": {"default": {"mode": "balanced", "skills": ["evidence_analysis", "reasoning_evaluation", "bias_detection", "conflict_mediation"], "confidence_threshold": 0.75, "max_analysis_time_minutes": 30}, "security_specialist": {"mode": "analytical", "skills": ["evidence_analysis", "reasoning_evaluation", "technical_expertise", "risk_assessment"], "expertise_domains": ["security", "compliance"], "confidence_threshold": 0.85, "max_analysis_time_minutes": 45}, "consensus_builder": {"mode": "consensus_building", "skills": ["conflict_mediation", "pattern_recognition", "bias_detection", "reasoning_evaluation"], "confidence_threshold": 0.7, "max_analysis_time_minutes": 60}}, "decision_recording": {"enabled": true, "retention_days": 365, "verification_enabled": true, "compliance_threshold": 0.8, "audit_events": ["decision_initiated", "conflict_detected", "escalation_triggered", "resolution_achieved", "human_escalated", "decision_overridden"]}, "human_escalation": {"enabled": true, "notification_channels": ["github_issue_comment", "slack_alert", "email_notification"], "timeout_hours": 24, "auto_reminder_hours": 4, "escalation_triggers": ["arbitration_timeout", "critical_security_conflict", "expert_panel_deadlock", "compliance_violation"]}, "workflow_integration": {"trigger_states": ["validating", "implementing", "pr_validating"], "conflict_detection_points": ["agent_vote_collection", "quality_gate_evaluation", "pr_review_conflicts"], "parallel_execution": true, "checkpoint_integration": true}, "metrics": {"track_resolution_time": true, "track_escalation_patterns": true, "track_confidence_accuracy": true, "track_human_intervention_rate": true, "performance_targets": {"average_resolution_time_minutes": 15, "escalation_rate_threshold": 0.2, "human_intervention_rate_threshold": 0.1, "confidence_accuracy_threshold": 0.85}}}}}, "adaptive-thresholds.yaml": {"optimization": {"enabled": true, "frequency_days": 14, "min_confidence_threshold": 0.7, "max_threshold_change_percent": 20.0, "min_historical_data_days": 30, "required_sample_size": 10, "prefer_conservative_changes": true, "enable_statistical_optimization": true, "use_pattern_based_recommendations": true}, "safety": {"require_manual_approval": true, "max_simultaneous_changes": 3, "rollback_monitoring_hours": 24, "performance_degradation_threshold": 0.1, "auto_rollback_on_failure_rate": 0.5, "auto_rollback_on_performance_drop": 0.15, "monitoring_alert_threshold": 0.2}, "component_priorities": {"critical_algorithms": "high", "public_apis": "high", "business_logic": "medium", "integration_code": "medium", "ui_components": "low", "test_utilities": "low"}, "learning": {"pattern_analysis_enabled": true, "github_issue_mining": true, "continuous_learning": true, "success_tracking_days": 90, "use_rif_knowledge_patterns": true, "store_successful_optimizations": true, "learn_from_rollbacks": true}, "notifications": {"threshold_changes": true, "optimization_results": true, "rollback_required": true, "performance_alerts": true, "github_comments": true, "log_level": "info"}, "thresholds": {"absolute_minimum": 50.0, "absolute_maximum": 100.0, "component_minimums": {"critical_algorithms": 85.0, "public_apis": 80.0, "business_logic": 75.0, "integration_code": 70.0, "ui_components": 60.0, "test_utilities": 50.0}}, "rules": {"low_pass_rate_threshold": 0.6, "high_override_rate_threshold": 0.25, "excellent_performance_threshold": 0.9, "trend_analysis_periods": 4, "improving_trend_confidence": 0.7, "degrading_trend_sensitivity": 0.15, "variance_threshold_for_optimization": 15.0, "confidence_boost_for_large_samples": true, "penalize_small_samples": true}, "integration": {"quality_gates_file": "config/rif-workflow.yaml", "backup_directory": "config/backups", "checkpoint_retention_days": 90, "change_history_retention_days": 365}}, "component-types.yaml": {"component_types": {"critical_algorithms": {"description": "Mission-critical algorithms and core computational logic", "priority": 1, "min_threshold": 95, "target_threshold": 100, "risk_factor": 1.5, "patterns": ["**/algorithms/**", "**/core/**", "**/engine/**", "**/*algorithm*", "**/*_algo.py", "**/crypto/**", "**/security/core/**"], "content_patterns": ["def.*algorithm", "class.*Algorithm", "@critical", "@algorithm", "def.*compute", "def.*calculate", "def.*process.*data"], "critical_extensions": [".py", ".js", ".ts", ".go", ".rs"]}, "public_apis": {"description": "Public-facing APIs and external interfaces", "priority": 2, "min_threshold": 90, "target_threshold": 95, "risk_factor": 1.3, "patterns": ["**/api/**", "**/endpoints/**", "**/routes/**", "**/*_api.py", "**/controllers/**", "**/handlers/**", "**/views/**"], "content_patterns": ["@app\\.route", "@api_view", "class.*API", "class.*Handler", "class.*Controller", "def get\\(", "def post\\(", "def put\\(", "def delete\\(", "def patch\\(", "@router"], "critical_extensions": [".py", ".js", ".ts", ".go", ".java"]}, "business_logic": {"description": "Core business logic and service layer components", "priority": 3, "min_threshold": 85, "target_threshold": 90, "risk_factor": 1.2, "patterns": ["**/services/**", "**/logic/**", "**/models/**", "**/domain/**", "**/business/**", "**/*_service.py", "**/*_logic.py", "**/*order*", "**/*management*"], "content_patterns": ["class.*Service", "class.*Manager", "class.*Handler", "@service", "@business_logic", "def.*business", "def.*process", "class.*Model", "order", "management"], "critical_extensions": [".py", ".js", ".ts", ".java", ".cs"]}, "integration_code": {"description": "External integrations and third-party service connectors", "priority": 4, "min_threshold": 80, "target_threshold": 85, "risk_factor": 1.1, "patterns": ["**/integrations/**", "**/external/**", "**/connectors/**", "**/adapters/**", "**/*client.py", "**/*_integration.py", "**/webhooks/**"], "content_patterns": ["requests\\.", "httpx\\.", "urllib\\.", "class.*Client", "class.*Connector", "class.*Integration", "class.*Adapter", "@integration"], "critical_extensions": [".py", ".js", ".ts", ".java", ".go"]}, "ui_components": {"description": "User interface components and frontend logic", "priority": 5, "min_threshold": 70, "target_threshold": 80, "risk_factor": 1.0, "patterns": ["**/components/**", "**/views/**", "**/pages/**", "**/templates/**", "**/static/**", "**/*.jsx", "**/*.vue", "**/*.svelte", "**/*.tsx", "**/*template*", "**/*view*", "**/*component*"], "content_patterns": ["return.*<", "render\\(", "component", "@Component", "React\\.", "Vue\\.", "useState", "useEffect"], "critical_extensions": [".jsx", ".tsx", ".vue", ".svelte", ".html", ".js", ".ts"]}, "test_utilities": {"description": "Test helpers, fixtures, and utility functions", "priority": 6, "min_threshold": 60, "target_threshold": 70, "risk_factor": 0.8, "patterns": ["**/test_utils/**", "**/fixtures/**", "**/helpers/**", "**/mocks/**", "**/*_helper.py", "**/conftest.py", "**/test_*.py", "**/*_test.py", "**/tests/**", "**/__tests__/**", "tests/*", "test/*", "tests/**", "**/test*.py"], "content_patterns": ["@fixture", "def test_", "mock", "Mock", "patch", "assert", "@pytest", "@test", "setUp", "tearDown", "TestCase", "unittest"], "critical_extensions": [".py", ".js", ".ts", ".java", ".go"]}}, "configuration": {"classification": {"pattern_matching_weight": 0.6, "content_analysis_weight": 0.3, "heuristic_fallback_weight": 0.1, "max_classification_time_ms": 100, "batch_optimization": true, "high_confidence_threshold": 0.9, "medium_confidence_threshold": 0.7, "low_confidence_threshold": 0.5}, "thresholds": {"fallback_threshold": 80, "small_change_bonus": 5, "large_change_penalty": 10, "hotfix_modifier": 1.2, "experimental_modifier": 0.9, "weighted_average": true, "min_component_weight": 0.1}, "performance": {"track_classification_time": true, "track_accuracy_metrics": true, "benchmark_against_baseline": true, "target_classification_accuracy": 95.0, "target_performance_overhead": 300}, "integration": {"rif_workflow_integration": true, "claude_hooks_integration": true, "github_actions_integration": true, "graceful_degradation": true, "log_classification_decisions": true}}, "validation": {"minimum_accuracy_threshold": 95.0, "accuracy_measurement_method": "historical_validation", "test_dataset_size": 1000, "cross_validation_folds": 5, "manual_review_threshold": 0.6, "conflict_resolution_strategy": "highest_priority_wins", "benchmark_dataset_size": 10000, "max_acceptable_latency_ms": 300}, "learning": {"enable_pattern_learning": true, "pattern_update_frequency": "weekly", "analyze_classification_errors": true, "maintain_accuracy_metrics": true, "accuracy_degradation_threshold": 2.0, "performance_degradation_threshold": 50}}}, "file_path": "config", "backup_path": "config/backups/test"}
{"checkpoint_id": "validation_test", "timestamp": "2025-08-24T03:58:25.268124Z", "description": "", "configuration": {"rif-workflow.yaml": {"workflow": {"name": "RIF Automatic Workflow", "version": "2.0.0", "initial_state": "new", "states": {"new": {"description": "Issue created, awaiting analysis", "timeout": "30m"}, "analyzing": {"description": "RIF-Analyst analyzing requirements", "agent": "rif-analyst", "timeout": "1h"}, "planning": {"description": "RIF-Planner creating execution plan", "agent": "rif-planner", "timeout": "1h"}, "architecting": {"description": "RIF-Architect designing solution", "agent": "rif-architect", "timeout": "2h"}, "implementing": {"description": "RIF-Implementer writing code", "agent": "rif-implementer", "timeout": "4h", "checkpoints": true}, "validating": {"description": "RIF-Validator testing solution", "agent": "rif-validator", "timeout": "2h"}, "documenting": {"description": "RIF-Documenter generating documentation", "agent": "rif-documenter", "timeout": "1h"}, "learning": {"description": "RIF-Learner updating knowledge base", "agent": "rif-learner", "timeout": "30m"}, "reviewing": {"description": "RIF-Reviewer analyzing code quality", "agent": "rif-reviewer", "timeout": "1h"}, "skeptical_review": {"description": "RIF-Validator conducting adversarial verification", "agent": "rif-validator", "timeout": "2h", "parallel_to": ["implementing", "architecting"], "risk_based": true}, "evidence_gathering": {"description": "RIF-Validator collecting validation evidence", "agent": "rif-validator", "timeout": "1h", "required_for": ["complete"]}, "quality_tracking": {"description": "Shadow quality monitoring via parallel issue", "agent": "rif-validator", "shadow_issue": true, "continuous": true, "parallel_orchestration": true}, "pr_creating": {"description": "RIF-PR-Manager creating pull request", "agent": "rif-pr-manager", "timeout": "30m"}, "pr_validating": {"description": "RIF-PR-Manager validating PR quality gates", "agent": "rif-pr-manager", "timeout": "2h"}, "pr_merging": {"description": "RIF-PR-Manager executing merge strategy", "agent": "rif-pr-manager", "timeout": "30m"}, "deploying": {"description": "RIF-PR-Manager coordinating deployment", "agent": "rif-pr-manager", "timeout": "1h"}, "complete": {"description": "Work finished successfully", "final": true}, "blocked": {"description": "Work blocked, needs intervention", "alert": true}, "failed": {"description": "Work failed, needs recovery", "alert": true, "recovery": true}, "arbitrating": {"description": "Agent conflict resolution in progress", "agent": "rif-arbitrator", "timeout": "30m", "parallel": true, "conflict_resolution": true}, "escalating": {"description": "Human intervention required for unresolved disputes", "agent": "human", "timeout": "2h", "alert": true, "human_required": true}, "expert_review": {"description": "Expert panel reviewing conflicting positions", "agent": "rif-expert-panel", "timeout": "1h", "expertise_based": true}}, "transitions": [{"from": "new", "to": "analyzing", "trigger": "auto", "condition": "always"}, {"from": "analyzing", "to": "planning", "trigger": "analysis_complete", "condition": "patterns_found OR complexity_assessed"}, {"from": "planning", "to": "architecting", "trigger": "plan_complete", "condition": "complexity >= high"}, {"from": "planning", "to": "implementing", "trigger": "plan_complete", "condition": "complexity < high"}, {"from": "architecting", "to": "implementing", "trigger": "design_complete", "condition": "dependencies_mapped"}, {"from": "implementing", "to": "validating", "trigger": "code_complete", "condition": "tests_written"}, {"from": "validating", "to": "documenting", "trigger": "tests_pass", "condition": "quality_gates_pass"}, {"from": "validating", "to": "implementing", "trigger": "tests_fail", "condition": "fixable_errors"}, {"from": "validating", "to": "failed", "trigger": "tests_fail", "condition": "critical_errors"}, {"from": "documenting", "to": "pr_creating", "trigger": "docs_complete", "condition": "pr_needed"}, {"from": "documenting", "to": "learning", "trigger": "docs_complete", "condition": "no_pr_needed"}, {"from": "pr_creating", "to": "pr_validating", "trigger": "pr_created", "condition": "quality_gates_triggered"}, {"from": "pr_validating", "to": "pr_merging", "trigger": "validation_complete", "condition": "all_gates_pass"}, {"from": "pr_validating", "to": "implementing", "trigger": "validation_failed", "condition": "fixable_issues"}, {"from": "pr_merging", "to": "deploying", "trigger": "merge_complete", "condition": "deployment_required"}, {"from": "pr_merging", "to": "learning", "trigger": "merge_complete", "condition": "no_deployment_needed"}, {"from": "deploying", "to": "learning", "trigger": "deployment_complete", "condition": "always"}, {"from": "reviewing", "to": "learning", "trigger": "review_approved", "condition": "changes_approved"}, {"from": "reviewing", "to": "implementing", "trigger": "changes_requested", "condition": "minor_changes"}, {"from": "reviewing", "to": "architecting", "trigger": "changes_requested", "condition": "major_changes"}, {"from": "learning", "to": "complete", "trigger": "knowledge_updated", "condition": "always"}, {"from": "implementing", "to": "skeptical_review", "trigger": "code_ready", "condition": "risk_level >= medium", "parallel": true}, {"from": "skeptical_review", "to": "evidence_gathering", "trigger": "missing_evidence", "condition": "evidence_incomplete"}, {"from": "evidence_gathering", "to": "validating", "trigger": "evidence_complete", "condition": "all_evidence_provided"}, {"from": "validating", "to": "implementing", "trigger": "validation_failed", "condition": "evidence_insufficient OR quality_score < 60"}, {"from": "quality_tracking", "to": "complete", "trigger": "main_issue_complete", "condition": "shadow_issue_closed"}, {"from": "blocked", "to": "analyzing", "trigger": "unblocked", "condition": "manual_intervention"}, {"from": "failed", "to": "analyzing", "trigger": "retry", "condition": "checkpoint_available"}, {"from": "validating", "to": "arbitrating", "trigger": "agent_conflict_detected", "condition": "disagreement_threshold_exceeded"}, {"from": "implementing", "to": "arbitrating", "trigger": "design_conflict", "condition": "conflicting_agent_decisions"}, {"from": "arbitrating", "to": "expert_review", "trigger": "escalation_required", "condition": "automated_resolution_failed"}, {"from": "expert_review", "to": "validating", "trigger": "expert_consensus_reached", "condition": "conflict_resolved"}, {"from": "expert_review", "to": "escalating", "trigger": "expert_disagreement", "condition": "expert_panel_deadlocked"}, {"from": "arbitrating", "to": "escalating", "trigger": "arbitration_timeout", "condition": "timeout_exceeded OR critical_security_conflict"}, {"from": "escalating", "to": "validating", "trigger": "human_decision_made", "condition": "conflict_resolved_by_human"}, {"from": "escalating", "to": "blocked", "trigger": "escalation_timeout", "condition": "human_intervention_timeout"}], "parallel": {"enabled": true, "max_concurrent": 4, "allowed_states": ["implementing", "validating", "documenting", "pr_validating", "deploying", "skeptical_review", "evidence_gathering", "quality_tracking", "arbitrating", "expert_review"], "constraints": ["Cannot parallelize across different issues", "Must maintain dependency order", "Quality gates must be sequential"]}, "checkpoints": {"enabled": true, "automatic_triggers": ["state_transition", "test_failure", "error_detected", "timeout_approaching"], "retention": {"successful": "7d", "failed": "30d"}, "recovery": {"automatic": true, "max_attempts": 3, "backoff": "exponential"}}, "quality_gates": {"adaptive_coverage": {"engine": "context_aware", "enabled": true, "fallback_threshold": 80, "component_overrides": true, "performance_budget": 300, "config_file": "config/component-types.yaml", "required": true, "blocker": true, "description": "Context-aware coverage thresholds based on component types", "weighted_calculation": {"enabled": true, "default_strategy": "balanced", "minimum_threshold": 60, "maximum_threshold": 100}, "performance_monitoring": {"track_classification_time": true, "track_calculation_time": true, "alert_on_slow_performance": true, "target_classification_time_ms": 100, "target_calculation_time_ms": 200}, "accuracy_validation": {"minimum_accuracy": 95.0, "enable_accuracy_tracking": true, "accuracy_degradation_alert": 2.0}}, "code_coverage": {"threshold": 80, "adaptive_override": "adaptive_coverage", "required": true, "blocker": true}, "security_scan": {"threshold": "no_critical", "required": true, "blocker": true}, "linting": {"threshold": "no_errors", "required": true, "blocker": false}, "performance": {"threshold": "baseline", "required": false, "blocker": false}, "documentation": {"threshold": "complete", "required": true, "blocker": false}, "evidence_requirements": {"threshold": "100%", "required": true, "blocker": true, "validation": "All claims must have verifiable evidence"}, "quality_score": {"threshold": 80, "formula": "100 - (20 \u00d7 FAILs) - (10 \u00d7 CONCERNS)", "required": true, "blocker": true, "deterministic": true}, "risk_assessment": {"threshold": "acceptable", "escalation_triggers": ["security_changes", "auth_modifications", "payment_processing", "large_diff", "no_tests"], "blocker": false, "advisory": true}, "conflict_resolution": {"threshold": "resolved", "required": true, "blocker": true, "description": "Agent conflicts must be resolved before proceeding"}, "arbitration_confidence": {"threshold": 0.7, "required": true, "blocker": true, "description": "Arbitration decisions must meet minimum confidence threshold"}, "escalation_justification": {"threshold": "documented", "required": true, "blocker": false, "description": "Human escalations must be properly justified"}}, "complexity": {"factors": [{"name": "lines_of_code", "weight": 0.3, "thresholds": {"low": 50, "medium": 500, "high": 2000, "very_high": 5000}}, {"name": "files_affected", "weight": 0.2, "thresholds": {"low": 1, "medium": 5, "high": 20, "very_high": 50}}, {"name": "dependencies", "weight": 0.3, "thresholds": {"low": 0, "medium": 3, "high": 10, "very_high": 20}}, {"name": "cross_cutting", "weight": 0.2, "thresholds": {"low": false, "medium": false, "high": true, "very_high": true}}]}, "planning_depth": {"shallow": {"complexity": "low", "max_depth": 1, "agents": ["rif-analyst", "rif-implementer", "rif-validator"]}, "standard": {"complexity": "medium", "max_depth": 3, "agents": ["rif-analyst", "rif-planner", "rif-implementer", "rif-validator"]}, "deep": {"complexity": "high", "max_depth": 5, "agents": ["rif-analyst", "rif-planner", "rif-architect", "rif-implementer", "rif-validator", "rif-documenter"]}, "recursive": {"complexity": "very_high", "max_depth": 10, "agents": "all", "decompose": true, "sub_issues": true}}, "monitoring": {"metrics": ["state_duration", "transition_count", "checkpoint_usage", "quality_scores", "agent_performance"], "alerts": {"stuck_workflow": {"condition": "state_duration > timeout", "action": "escalate"}, "quality_failure": {"condition": "quality_gate_failed", "action": "rollback"}, "repeated_failure": {"condition": "failure_count > 3", "action": "manual_review"}}}, "evidence_requirements": {"feature_complete": {"mandatory": ["unit_tests_passing", "integration_tests_passing", "coverage_report", "functional_testing_results"], "optional": ["performance_metrics", "user_acceptance_testing", "accessibility_audit"]}, "bug_fixed": {"mandatory": ["regression_test_added", "root_cause_analysis", "fix_verification_test", "before_after_comparison"], "optional": ["prevention_measures_documented", "related_bug_tests_added", "monitoring_alerting_updated"]}, "performance_improved": {"mandatory": ["baseline_performance_metrics", "after_performance_metrics", "statistical_comparison_analysis", "load_testing_results"], "optional": ["profiling_data", "resource_utilization_analysis", "scalability_testing"]}, "security_validated": {"mandatory": ["automated_vulnerability_scan", "security_test_results", "threat_model_review", "penetration_testing_summary"], "optional": ["compliance_checklist", "security_audit_trail", "third_party_security_review"]}, "refactoring_complete": {"mandatory": ["before_after_code_metrics", "test_suite_still_passing", "performance_unchanged_proof", "api_compatibility_verified"], "optional": ["code_quality_improvements", "technical_debt_reduction", "maintainability_metrics"]}}, "shadow_quality_tracking": {"enabled": true, "auto_create": true, "prefix": "Quality Tracking:", "labels": ["quality:shadow", "state:quality-tracking"], "triggers": {"complexity": ["medium", "high", "very-high"], "risk_level": ["medium", "high", "critical"], "security_changes": true, "large_changes": ">500 lines"}}, "verification_parallelism": {"enabled": true, "strategies": {"main_development": {"states": ["implementing", "architecting", "planning"], "description": "Primary development workflow"}, "quality_assurance": {"states": ["skeptical_review", "quality_tracking", "evidence_gathering"], "description": "Parallel quality verification"}, "can_run_simultaneously": true, "max_parallel_streams": 2}}, "adversarial_testing": {"enabled": true, "default_mindset": "skeptical", "evidence_based_decisions": true, "risk_escalation": {"enabled": true, "auto_triggers": true, "escalation_factors": ["security_file_changes", "authentication_modifications", "payment_processing_changes", "large_diffs", "missing_tests", "previous_failures"]}}, "github": {"auto_labels": {"enabled": true, "prefix": "rif-"}, "auto_comments": {"enabled": true, "format": "markdown", "include_metrics": true}, "auto_pr": {"enabled": true, "draft": false, "reviewers": "auto"}, "auto_close": {"enabled": true, "on_complete": true, "add_comment": true}}, "arbitration": {"enabled": true, "conflict_detection": {"disagreement_threshold": 0.3, "confidence_threshold": 0.5, "split_decision_threshold": 0.4, "outlier_detection_stddev": 2.0, "low_confidence_threshold": 0.4, "expertise_coverage_threshold": 0.7}, "escalation": {"max_levels": 3, "timeout_minutes": {"automated_resolution": 5, "weighted_consensus": 10, "expert_panel": 30, "arbitrator_agent": 45, "evidence_review": 30, "human_intervention": 1440}, "strategies": {"conservative": {"enabled": true, "use_case": "security_critical OR risk_level >= high"}, "balanced": {"enabled": true, "use_case": "default"}, "aggressive": {"enabled": true, "use_case": "risk_level <= low AND complexity <= medium"}, "security_focused": {"enabled": true, "use_case": "security_critical = true"}, "efficiency_focused": {"enabled": true, "use_case": "time_critical = true"}}}, "arbitrator_agents": {"default": {"mode": "balanced", "skills": ["evidence_analysis", "reasoning_evaluation", "bias_detection", "conflict_mediation"], "confidence_threshold": 0.75, "max_analysis_time_minutes": 30}, "security_specialist": {"mode": "analytical", "skills": ["evidence_analysis", "reasoning_evaluation", "technical_expertise", "risk_assessment"], "expertise_domains": ["security", "compliance"], "confidence_threshold": 0.85, "max_analysis_time_minutes": 45}, "consensus_builder": {"mode": "consensus_building", "skills": ["conflict_mediation", "pattern_recognition", "bias_detection", "reasoning_evaluation"], "confidence_threshold": 0.7, "max_analysis_time_minutes": 60}}, "decision_recording": {"enabled": true, "retention_days": 365, "verification_enabled": true, "compliance_threshold": 0.8, "audit_events": ["decision_initiated", "conflict_detected", "escalation_triggered", "resolution_achieved", "human_escalated", "decision_overridden"]}, "human_escalation": {"enabled": true, "notification_channels": ["github_issue_comment", "slack_alert", "email_notification"], "timeout_hours": 24, "auto_reminder_hours": 4, "escalation_triggers": ["arbitration_timeout", "critical_security_conflict", "expert_panel_deadlock", "compliance_violation"]}, "workflow_integration": {"trigger_states": ["validating", "implementing", "pr_validating"], "conflict_detection_points": ["agent_vote_collection", "quality_gate_evaluation", "pr_review_conflicts"], "parallel_execution": true, "checkpoint_integration": true}, "metrics": {"track_resolution_time": true, "track_escalation_patterns": true, "track_confidence_accuracy": true, "track_human_intervention_rate": true, "performance_targets": {"average_resolution_time_minutes": 15, "escalation_rate_threshold": 0.2, "human_intervention_rate_threshold": 0.1, "confidence_accuracy_threshold": 0.85}}}}}, "adaptive-thresholds.yaml": {"optimization": {"enabled": true, "frequency_days": 14, "min_confidence_threshold": 0.7, "max_threshold_change_percent": 20.0, "min_historical_data_days": 30, "required_sample_size": 10, "prefer_conservative_changes": true, "enable_statistical_optimization": true, "use_pattern_based_recommendations": true}, "safety": {"require_manual_approval": true, "max_simultaneous_changes": 3, "rollback_monitoring_hours": 24, "performance_degradation_threshold": 0.1, "auto_rollback_on_failure_rate": 0.5, "auto_rollback_on_performance_drop": 0.15, "monitoring_alert_threshold": 0.2}, "component_priorities": {"critical_algorithms": "high", "public_apis": "high", "business_logic": "medium", "integration_code": "medium", "ui_components": "low", "test_utilities": "low"}, "learning": {"pattern_analysis_enabled": true, "github_issue_mining": true, "continuous_learning": true, "success_tracking_days": 90, "use_rif_knowledge_patterns": true, "store_successful_optimizations": true, "learn_from_rollbacks": true}, "notifications": {"threshold_changes": true, "optimization_results": true, "rollback_required": true, "performance_alerts": true, "github_comments": true, "log_level": "info"}, "thresholds": {"absolute_minimum": 50.0, "absolute_maximum": 100.0, "component_minimums": {"critical_algorithms": 85.0, "public_apis": 80.0, "business_logic": 75.0, "integration_code": 70.0, "ui_components": 60.0, "test_utilities": 50.0}}, "rules": {"low_pass_rate_threshold": 0.6, "high_override_rate_threshold": 0.25, "excellent_performance_threshold": 0.9, "trend_analysis_periods": 4, "improving_trend_confidence": 0.7, "degrading_trend_sensitivity": 0.15, "variance_threshold_for_optimization": 15.0, "confidence_boost_for_large_samples": true, "penalize_small_samples": true}, "integration": {"quality_gates_file": "config/rif-workflow.yaml", "backup_directory": "config/backups", "checkpoint_retention_days": 90, "change_history_retention_days": 365}}, "component-types.yaml": {"component_types": {"critical_algorithms": {"description": "Mission-critical algorithms and core computational logic", "priority": 1, "min_threshold": 95, "target_threshold": 100, "risk_factor": 1.5, "patterns": ["**/algorithms/**", "**/core/**", "**/engine/**", "**/*algorithm*", "**/*_algo.py", "**/crypto/**", "**/security/core/**"], "content_patterns": ["def.*algorithm", "class.*Algorithm", "@critical", "@algorithm", "def.*compute", "def.*calculate", "def.*process.*data"], "critical_extensions": [".py", ".js", ".ts", ".go", ".rs"]}, "public_apis": {"description": "Public-facing APIs and external interfaces", "priority": 2, "min_threshold": 90, "target_threshold": 95, "risk_factor": 1.3, "patterns": ["**/api/**", "**/endpoints/**", "**/routes/**", "**/*_api.py", "**/controllers/**", "**/handlers/**", "**/views/**"], "content_patterns": ["@app\\.route", "@api_view", "class.*API", "class.*Handler", "class.*Controller", "def get\\(", "def post\\(", "def put\\(", "def delete\\(", "def patch\\(", "@router"], "critical_extensions": [".py", ".js", ".ts", ".go", ".java"]}, "business_logic": {"description": "Core business logic and service layer components", "priority": 3, "min_threshold": 85, "target_threshold": 90, "risk_factor": 1.2, "patterns": ["**/services/**", "**/logic/**", "**/models/**", "**/domain/**", "**/business/**", "**/*_service.py", "**/*_logic.py", "**/*order*", "**/*management*"], "content_patterns": ["class.*Service", "class.*Manager", "class.*Handler", "@service", "@business_logic", "def.*business", "def.*process", "class.*Model", "order", "management"], "critical_extensions": [".py", ".js", ".ts", ".java", ".cs"]}, "integration_code": {"description": "External integrations and third-party service connectors", "priority": 4, "min_threshold": 80, "target_threshold": 85, "risk_factor": 1.1, "patterns": ["**/integrations/**", "**/external/**", "**/connectors/**", "**/adapters/**", "**/*client.py", "**/*_integration.py", "**/webhooks/**"], "content_patterns": ["requests\\.", "httpx\\.", "urllib\\.", "class.*Client", "class.*Connector", "class.*Integration", "class.*Adapter", "@integration"], "critical_extensions": [".py", ".js", ".ts", ".java", ".go"]}, "ui_components": {"description": "User interface components and frontend logic", "priority": 5, "min_threshold": 70, "target_threshold": 80, "risk_factor": 1.0, "patterns": ["**/components/**", "**/views/**", "**/pages/**", "**/templates/**", "**/static/**", "**/*.jsx", "**/*.vue", "**/*.svelte", "**/*.tsx", "**/*template*", "**/*view*", "**/*component*"], "content_patterns": ["return.*<", "render\\(", "component", "@Component", "React\\.", "Vue\\.", "useState", "useEffect"], "critical_extensions": [".jsx", ".tsx", ".vue", ".svelte", ".html", ".js", ".ts"]}, "test_utilities": {"description": "Test helpers, fixtures, and utility functions", "priority": 6, "min_threshold": 60, "target_threshold": 70, "risk_factor": 0.8, "patterns": ["**/test_utils/**", "**/fixtures/**", "**/helpers/**", "**/mocks/**", "**/*_helper.py", "**/conftest.py", "**/test_*.py", "**/*_test.py", "**/tests/**", "**/__tests__/**", "tests/*", "test/*", "tests/**", "**/test*.py"], "content_patterns": ["@fixture", "def test_", "mock", "Mock", "patch", "assert", "@pytest", "@test", "setUp", "tearDown", "TestCase", "unittest"], "critical_extensions": [".py", ".js", ".ts", ".java", ".go"]}}, "configuration": {"classification": {"pattern_matching_weight": 0.6, "content_analysis_weight": 0.3, "heuristic_fallback_weight": 0.1, "max_classification_time_ms": 100, "batch_optimization": true, "high_confidence_threshold": 0.9, "medium_confidence_threshold": 0.7, "low_confidence_threshold": 0.5}, "thresholds": {"fallback_threshold": 80, "small_change_bonus": 5, "large_change_penalty": 10, "hotfix_modifier": 1.2, "experimental_modifier": 0.9, "weighted_average": true, "min_component_weight": 0.1}, "performance": {"track_classification_time": true, "track_accuracy_metrics": true, "benchmark_against_baseline": true, "target_classification_accuracy": 95.0, "target_performance_overhead": 300}, "integration": {"rif_workflow_integration": true, "claude_hooks_integration": true, "github_actions_integration": true, "graceful_degradation": true, "log_classification_decisions": true}}, "validation": {"minimum_accuracy_threshold": 95.0, "accuracy_measurement_method": "historical_validation", "test_dataset_size": 1000, "cross_validation_folds": 5, "manual_review_threshold": 0.6, "conflict_resolution_strategy": "highest_priority_wins", "benchmark_dataset_size": 10000, "max_acceptable_latency_ms": 300}, "learning": {"enable_pattern_learning": true, "pattern_update_frequency": "weekly", "analyze_classification_errors": true, "maintain_accuracy_metrics": true, "accuracy_degradation_threshold": 2.0, "performance_degradation_threshold": 50}}}, "file_path": "config", "backup_path": "config/backups/validation_test"}
