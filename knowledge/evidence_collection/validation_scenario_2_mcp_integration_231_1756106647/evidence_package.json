{
  "validation_id": "scenario_2_mcp_integration_231_1756106647",
  "issue_id": "231",
  "validator_agent": "integration_test_validator",
  "validation_type": "mcp_integration",
  "collection_start": "2025-08-25T00:24:07.315791",
  "collection_end": "2025-08-25T00:24:08.255221",
  "evidence_items": [
    {
      "evidence_type": "command_execution",
      "evidence_category": "execution",
      "timestamp": "2025-08-25T00:24:08.144775",
      "source": "execution_tracer",
      "data": {
        "command": "python3 -m pytest tests/mcp/integration/test_mcp_claude_desktop_integration.py",
        "execution_context": "mcp_integration_test_execution",
        "start_time": "2025-08-25T00:24:07.820316",
        "process_info": {
          "pid": "completed",
          "return_code": 1,
          "success": false
        },
        "output": {
          "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.9.6, pytest-8.4.1, pluggy-1.6.0\nrootdir: /Users/cal/DEV/RIF\nplugins: anyio-4.9.0, asyncio-1.1.0, cov-4.1.0, mock-3.11.1\nasyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 4 items\n\ntests/mcp/integration/test_mcp_claude_desktop_integration.py FFFF        [100%]\n\n=================================== FAILURES ===================================\n______________________ test_mcp_claude_desktop_connection ______________________\n\n    @pytest.mark.asyncio\n    async def test_mcp_claude_desktop_connection():\n        \"\"\"Test MCP server connection to Claude Desktop\"\"\"\n>       integration_test = MCPClaudeDesktopIntegrationTests()\nE       TypeError: Can't instantiate abstract class MCPClaudeDesktopIntegrationTests with abstract method run_test_scenario\n\ntests/mcp/integration/test_mcp_claude_desktop_integration.py:607: TypeError\n_____",
          "stderr": "",
          "return_code": 1
        },
        "timing": {
          "duration_seconds": 0.32433509826660156,
          "end_time": "2025-08-25T00:24:08.144651"
        },
        "errors": []
      },
      "metadata": {
        "command_hash": "9b3eb60b"
      },
      "authenticity_hash": "a6619e40007db6564e366cc1d92b762636a601121bc52f08a218bf54dd890807",
      "collection_context": "validation_session"
    },
    {
      "evidence_type": "performance_measurement",
      "evidence_category": "performance",
      "timestamp": "2025-08-25T00:24:08.254911",
      "source": "performance_collector",
      "data": {
        "operation_name": "integration_testing",
        "start_time": "2025-08-25T00:24:07.318115",
        "end_time": "2025-08-25T00:24:08.144791",
        "duration_seconds": 0.8266761302947998,
        "system_metrics": {
          "cpu_percent": 0.0,
          "memory_percent": 71.3
        },
        "additional_metrics": {}
      },
      "metadata": {
        "operation_hash": "f95dfe08"
      },
      "authenticity_hash": "6e07b2a67a34fd3d6c774dad782c9621ecabb30a13bbaa77fe51e455919f43ac",
      "collection_context": "validation_session"
    },
    {
      "evidence_type": "environment_final",
      "evidence_category": "environment",
      "timestamp": "2025-08-25T00:24:08.255170",
      "source": "evidence_collector",
      "data": {
        "platform": {
          "system": "Darwin",
          "release": "24.6.0",
          "version": "Darwin Kernel Version 24.6.0: Mon Jul 14 11:29:54 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T8122",
          "machine": "arm64",
          "processor": "arm"
        },
        "python": {
          "version": "3.9.6 (default, Apr 30 2025, 02:07:17) \n[Clang 17.0.0 (clang-1700.0.13.5)]",
          "executable": "/Library/Developer/CommandLineTools/usr/bin/python3",
          "path": [
            "/Users/cal/DEV/RIF",
            "/Users/cal/DEV/RIF",
            "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python39.zip",
            "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9",
            "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/lib-dynload"
          ]
        },
        "working_directory": "/Users/cal/DEV/RIF",
        "environment_variables": {
          "SHELL": "/bin/zsh",
          "HOME": "/Users/cal",
          "USER": "cal",
          "PATH": "/Users/cal/Library/pnpm:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/cal/.cargo/bin",
          "HOMEBREW_PREFIX": "/opt/homebrew",
          "HOMEBREW_CELLAR": "/opt/homebrew/Cellar",
          "HOMEBREW_REPOSITORY": "/opt/homebrew"
        },
        "system_resources": {
          "cpu_count": 8,
          "total_memory": 17179869184,
          "disk_total": 245107195904
        },
        "timestamp": "2025-08-25T00:24:08.255138"
      },
      "metadata": {
        "collection_phase": "finalization"
      },
      "authenticity_hash": "a74f959fb9cf9608e7ffa5b9793fda3200567f823ab59343e6d83a659ff88a6d",
      "collection_context": "validation_session"
    }
  ],
  "summary": {
    "total_evidence_items": 3,
    "evidence_categories": {
      "execution": 1,
      "performance": 1,
      "environment": 1
    },
    "evidence_types": {
      "command_execution": 1,
      "performance_measurement": 1,
      "environment_final": 1
    },
    "evidence_sources": {
      "execution_tracer": 1,
      "performance_collector": 1,
      "evidence_collector": 1
    },
    "collection_duration_seconds": 0.110395,
    "error_count": 0,
    "performance_snapshots": 1
  },
  "quality_metrics": {
    "overall_quality": 80.00036798333333,
    "completeness": 100.0,
    "authenticity": 100.0,
    "temporal_coverage": 0.0018399166666666666,
    "evidence_density": 3.0
  },
  "audit_trail": [
    {
      "event": "collection_started",
      "timestamp": "2025-08-25T00:24:07.315791",
      "details": {
        "validation_id": "scenario_2_mcp_integration_231_1756106647",
        "validator_agent": "integration_test_validator"
      }
    },
    {
      "event": "collection_completed",
      "timestamp": "2025-08-25T00:24:08.255214",
      "details": {
        "total_evidence_items": 3,
        "collection_duration": 0
      }
    }
  ]
}