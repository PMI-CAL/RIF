{
  "pattern_id": "rif-analyst-granular-decomposition-methodology",
  "pattern_name": "RIF-Analyst Granular Issue Decomposition Pattern",
  "description": "Systematic approach for analyzing complex issues and determining optimal decomposition strategies",
  "complexity": "medium",
  "success_indicators": [
    "Context window constraints accurately assessed",
    "Decomposition decisions based on quantitative factors",
    "Evidence requirements identified proactively", 
    "Parallel execution opportunities recognized",
    "Cross-issue integration patterns identified"
  ],
  
  "decomposition_framework": {
    "context_window_analysis": {
      "purpose": "Determine if issue fits within single agent context constraints",
      "factors": {
        "estimated_loc": {
          "threshold": 500,
          "weight": 0.4,
          "rationale": "Primary constraint for context window management"
        },
        "file_count": {
          "threshold": 5,
          "weight": 0.2,
          "rationale": "Multiple files increase cognitive complexity"
        },
        "complexity_level": {
          "threshold": "high",
          "weight": 0.25,
          "rationale": "High complexity requires deeper analysis"
        },
        "dependency_count": {
          "threshold": 3,
          "weight": 0.15,
          "rationale": "Dependencies increase integration complexity"
        }
      },
      "decision_algorithm": "needs_decomposition = (loc > 500 OR files > 5 OR complexity == 'high' OR dependencies > 3)"
    },
    
    "evidence_requirements_analysis": {
      "purpose": "Proactively identify evidence categories needed for validation",
      "categories": {
        "functional_correctness": ["unit_tests", "integration_tests", "coverage_reports"],
        "performance": ["baseline_metrics", "current_metrics", "improvement_analysis"],
        "security": ["vulnerability_scans", "penetration_tests", "security_reviews"],
        "quality": ["linting_results", "type_checking", "code_review"],
        "documentation": ["api_docs", "implementation_notes", "user_guides"]
      },
      "mapping_strategy": "Map issue type and complexity to required evidence categories"
    },
    
    "complexity_assessment_enhancement": {
      "purpose": "Extend complexity factors to include validation requirements",
      "validation_factors": {
        "testing_difficulty": {
          "indicators": ["requires_mocking", "external_dependencies", "async_operations"],
          "weight": 0.2
        },
        "evidence_requirements": {
          "indicators": ["performance_critical", "security_sensitive", "user_facing"],
          "weight": 0.15
        },
        "risk_level": {
          "indicators": ["affects_authentication", "handles_payments", "modifies_core_logic"],
          "weight": 0.25
        }
      }
    },
    
    "parallel_validation_strategy": {
      "purpose": "Identify opportunities for parallel execution and verification",
      "patterns": {
        "main_development": "Primary implementation track",
        "quality_tracking": "Continuous monitoring via shadow issues",
        "risk_assessment": "Parallel skeptical review for high-risk areas"
      },
      "synchronization_points": [
        "sub_issue_completion",
        "integration_phases", 
        "quality_gate_checkpoints",
        "final_validation_convergence"
      ]
    }
  },
  
  "analysis_methodology": {
    "pattern_recognition_approach": {
      "knowledge_query_strategy": "Search for similar issues, complexity patterns, implementation approaches",
      "pattern_matching_criteria": ["domain_similarity", "complexity_alignment", "technical_approach"],
      "application_logic": "Apply successful patterns while avoiding known failure modes"
    },
    
    "dependency_analysis": {
      "hard_dependencies": "Must be completed before this issue can proceed",
      "soft_dependencies": "Provide context or optimization opportunities",
      "integration_points": "Points where this issue connects with other work",
      "critical_path_identification": "Dependencies that affect overall completion timeline"
    },
    
    "risk_assessment_framework": {
      "technical_risks": ["implementation_complexity", "integration_challenges", "tool_limitations"],
      "integration_risks": ["workflow_disruption", "compatibility_issues", "performance_impact"],
      "mitigation_strategies": ["incremental_development", "checkpoint_validation", "rollback_plans"]
    }
  },
  
  "output_template_enhancements": {
    "context_window_assessment": {
      "estimated_total_loc": "Quantitative estimate",
      "files_affected": "Count and identification",
      "complexity_rating": "Standardized complexity level",
      "decomposition_recommendation": "YES/NO with rationale"
    },
    
    "proposed_sub_issues": {
      "structure": "Logical breakdown with clear boundaries",
      "dependencies": "Inter-sub-issue dependency mapping",
      "parallel_validation": "Opportunities for concurrent execution",
      "integration_strategy": "How sub-issues combine into complete solution"
    },
    
    "evidence_requirements": {
      "mandatory_evidence": "Must-have evidence for validation",
      "optional_evidence": "Nice-to-have evidence for comprehensive validation",
      "collection_points": "When and how evidence should be gathered",
      "validation_strategy": "How evidence will be used for quality assessment"
    }
  },
  
  "success_metrics": {
    "decomposition_accuracy": "Percentage of decomposition decisions that prove correct in implementation",
    "context_fit": "Percentage of sub-issues that fit within context window constraints",
    "evidence_completeness": "Percentage of required evidence successfully identified upfront",
    "parallel_execution_efficiency": "Time savings from parallel execution recommendations",
    "integration_success_rate": "Percentage of decomposed issues that integrate successfully"
  },
  
  "implementation_best_practices": [
    "Always query knowledge base for similar patterns before analysis",
    "Use quantitative factors for decomposition decisions, not intuition",
    "Identify evidence requirements upfront to prevent validation delays",
    "Look for parallel execution opportunities to optimize development time",
    "Maintain backward compatibility with existing RIF-Analyst behavior",
    "Document analysis rationale for future pattern learning"
  ],
  
  "integration_considerations": {
    "workflow_integration": "Must align with adversarial verification workflow states",
    "agent_coordination": "Analysis output feeds into implementer and validator agents",
    "quality_framework": "Evidence requirements support quality scoring system",
    "knowledge_system": "Analysis patterns stored for future reference and improvement"
  },
  
  "lessons_learned": [
    {
      "lesson": "Context window analysis prevents agent context overflow",
      "evidence": "Issue #20 correctly identified for decomposition due to >500 LOC estimate",
      "application": "Always perform LOC estimation with context window thresholds"
    },
    {
      "lesson": "Evidence requirements analysis improves validation efficiency", 
      "evidence": "Proactive evidence identification reduces validation cycles",
      "application": "Map issue types to evidence categories upfront"
    },
    {
      "lesson": "Pattern matching from knowledge base improves analysis quality",
      "evidence": "15 relevant patterns found across 5 issues improved recommendations",
      "application": "Always query knowledge system before analysis"
    },
    {
      "lesson": "Parallel execution recommendations optimize development workflow",
      "evidence": "4 of 5 issues identified opportunities for parallel development",
      "application": "Look for independence in sub-issues and workflow states"
    }
  ],
  
  "reusability_factors": [
    "Framework applicable to any complex issue analysis",
    "Context window analysis universally relevant for agent systems",
    "Evidence requirements mapping adaptable to different domains",
    "Parallel execution patterns applicable to multi-agent workflows",
    "Risk assessment framework broadly applicable"
  ],
  
  "created": "2025-08-23T21:45:00Z",
  "source": "adversarial_verification_sub_issues_analysis",
  "validated_against": ["issue_20", "issue_21", "issue_22", "issue_23", "issue_26"],
  "reusability_score": 9.5,
  "pattern_maturity": "established"
}