# GitHub Secret Scanning Configuration
# This file defines custom patterns for detecting secrets in the RIF repository

# Custom secret patterns
patterns:
  # RIF-specific API keys and tokens
  - name: RIF Agent Token
    pattern: 'rif_agent_[a-zA-Z0-9]{32}'
    description: 'RIF Agent authentication token'
    
  - name: RIF Knowledge Base Key
    pattern: 'rif_kb_[a-fA-F0-9]{40}'
    description: 'RIF Knowledge Base access key'
    
  - name: RIF Orchestration Secret
    pattern: 'rif_orch_[a-zA-Z0-9_-]{24,64}'
    description: 'RIF Orchestration service secret'

  # Database connection strings
  - name: Database Connection String
    pattern: '(?i)(postgresql|mysql|mongodb|redis)://[^\\s"''`]*'
    description: 'Database connection string with credentials'

  # Cloud provider secrets
  - name: AWS Access Key
    pattern: 'AKIA[0-9A-Z]{16}'
    description: 'AWS Access Key ID'
    
  - name: AWS Secret Key
    pattern: '[A-Za-z0-9/+=]{40}'
    description: 'AWS Secret Access Key (potential match)'
    
  - name: Azure Storage Account Key
    pattern: '[A-Za-z0-9+/]{88}=='
    description: 'Azure Storage Account Key'
    
  - name: GCP Service Account Key
    pattern: '"type"\\s*:\\s*"service_account"'
    description: 'GCP Service Account JSON Key'

  # API keys and tokens
  - name: Generic API Key
    pattern: '[Aa][Pp][Ii][-_]?[Kk][Ee][Yy]\\s*[:=]\\s*["\''`]?[a-zA-Z0-9_-]{16,64}["\''`]?'
    description: 'Generic API key pattern'
    
  - name: GitHub Token
    pattern: 'gh[pousr]_[A-Za-z0-9_]{36,255}'
    description: 'GitHub personal access token'
    
  - name: OpenAI API Key
    pattern: 'sk-[A-Za-z0-9]{48}'
    description: 'OpenAI API key'
    
  - name: Anthropic API Key
    pattern: 'sk-ant-api03-[A-Za-z0-9_-]{95}'
    description: 'Anthropic Claude API key'

  # SSH and encryption keys
  - name: SSH Private Key
    pattern: '-----BEGIN [A-Z ]*PRIVATE KEY-----'
    description: 'SSH private key'
    
  - name: RSA Private Key
    pattern: '-----BEGIN RSA PRIVATE KEY-----'
    description: 'RSA private key'

  # JWT tokens
  - name: JWT Token
    pattern: 'eyJ[A-Za-z0-9_-]*\\.[A-Za-z0-9_-]*\\.[A-Za-z0-9_-]*'
    description: 'JSON Web Token'

  # Passwords and secrets in configuration
  - name: Password in Config
    pattern: '[Pp][Aa][Ss][Ss][Ww][Oo][Rr][Dd]\\s*[:=]\\s*["\''`]?[^\\s"''`\\n]{6,}["\''`]?'
    description: 'Password in configuration file'
    
  - name: Secret in Config
    pattern: '[Ss][Ee][Cc][Rr][Ee][Tt]\\s*[:=]\\s*["\''`]?[a-zA-Z0-9_-]{8,}["\''`]?'
    description: 'Secret in configuration file'

  # Email addresses (potentially sensitive)
  - name: Email Address
    pattern: '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}'
    description: 'Email address'

# File patterns to exclude from secret scanning
exclude_patterns:
  # Documentation and example files
  - '*.md'
  - '*.rst'
  - '*.txt'
  - 'example*'
  - 'sample*'
  - 'template*'
  - 'demo*'
  
  # Test files (may contain test secrets)
  - 'test/**/*'
  - 'tests/**/*'
  - '**/test_*'
  - '**/*_test.*'
  - '**/fixtures/**/*'
  - '**/mocks/**/*'
  
  # Build and distribution
  - 'build/**/*'
  - 'dist/**/*'
  - 'node_modules/**/*'
  - '**/__pycache__/**/*'
  - '*.egg-info/**/*'
  
  # Version control
  - '.git/**/*'
  - '.gitkeep'
  
  # IDE and editor files
  - '.vscode/**/*'
  - '.idea/**/*'
  - '*.swp'
  - '*.swo'
  - '*~'

# Paths to specifically include (overrides excludes)
include_patterns:
  - 'src/**/*'
  - 'lib/**/*'
  - 'claude/**/*'
  - 'config/**/*'
  - 'scripts/**/*'
  - '*.py'
  - '*.js'
  - '*.ts'
  - '*.yml'
  - '*.yaml'
  - '*.json'
  - '*.sh'
  - '*.env.example'

# Scanning configuration
scanning_options:
  # Case sensitivity
  case_sensitive: false
  
  # Maximum file size to scan (in MB)
  max_file_size: 10
  
  # Maximum line length to consider
  max_line_length: 1000
  
  # Minimum secret length
  min_secret_length: 8
  
  # Enable entropy-based detection
  entropy_detection: true
  
  # Entropy thresholds
  entropy_thresholds:
    base64: 4.5
    hex: 3.0
    
  # Additional validation
  validate_secrets:
    # Check if secret looks like a hash
    exclude_hashes: true
    # Check if secret is in a common format
    common_formats: true

# Custom validation rules
validation_rules:
  # Exclude common false positives
  - pattern: 'example\\.com'
    action: 'exclude'
    reason: 'Example domain'
    
  - pattern: 'localhost'
    action: 'exclude'  
    reason: 'Local development'
    
  - pattern: '127\\.0\\.0\\.1'
    action: 'exclude'
    reason: 'Local IP address'
    
  - pattern: 'password123|admin|root'
    action: 'exclude'
    reason: 'Common test credentials'

# Alerting configuration
alerts:
  # Severity levels
  severity_mapping:
    'RIF Agent Token': 'critical'
    'RIF Knowledge Base Key': 'high'
    'Database Connection String': 'high'
    'SSH Private Key': 'critical'
    'AWS Access Key': 'high'
    'GitHub Token': 'high'
    'OpenAI API Key': 'high'
    'Anthropic API Key': 'high'
    'JWT Token': 'medium'
    'Email Address': 'low'
    
  # Notification settings
  notifications:
    # Immediate alerts for critical secrets
    immediate:
      - 'critical'
      - 'high'
    
    # Daily digest for lower priority
    daily_digest:
      - 'medium'
      - 'low'
    
    # Recipients
    recipients:
      - 'security@rif-framework.org'
      - 'maintainer'

# Integration settings
integrations:
  # GitHub Security Advisories
  github_security_advisories: true
  
  # Dependabot alerts
  dependabot_integration: true
  
  # External security tools
  external_tools:
    - name: 'Snyk'
      enabled: false  # Enable if Snyk token is available
    - name: 'Semgrep'
      enabled: true
    - name: 'TruffleHog'
      enabled: true